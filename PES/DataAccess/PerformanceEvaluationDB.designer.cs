#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PES.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PerformaceEvaluation")]
	public partial class PerformanceEvaluationDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEvaluationPeriod(EvaluationPeriod instance);
    partial void UpdateEvaluationPeriod(EvaluationPeriod instance);
    partial void DeleteEvaluationPeriod(EvaluationPeriod instance);
    partial void InsertLKDatatype(LKDatatype instance);
    partial void UpdateLKDatatype(LKDatatype instance);
    partial void DeleteLKDatatype(LKDatatype instance);
    partial void InsertLKUsersRole(LKUsersRole instance);
    partial void UpdateLKUsersRole(LKUsersRole instance);
    partial void DeleteLKUsersRole(LKUsersRole instance);
    partial void InsertUsersLogIn(UsersLogIn instance);
    partial void UpdateUsersLogIn(UsersLogIn instance);
    partial void DeleteUsersLogIn(UsersLogIn instance);
    partial void InsertEmployee_LineManager(Employee_LineManager instance);
    partial void UpdateEmployee_LineManager(Employee_LineManager instance);
    partial void DeleteEmployee_LineManager(Employee_LineManager instance);
    partial void InsertLKEvaluationPoint(LKEvaluationPoint instance);
    partial void UpdateLKEvaluationPoint(LKEvaluationPoint instance);
    partial void DeleteLKEvaluationPoint(LKEvaluationPoint instance);
    partial void InsertLKSixMonthPlan(LKSixMonthPlan instance);
    partial void UpdateLKSixMonthPlan(LKSixMonthPlan instance);
    partial void DeleteLKSixMonthPlan(LKSixMonthPlan instance);
    partial void InsertEvaluatedPoint(EvaluatedPoint instance);
    partial void UpdateEvaluatedPoint(EvaluatedPoint instance);
    partial void DeleteEvaluatedPoint(EvaluatedPoint instance);
    partial void InsertSixMonthPlan(SixMonthPlan instance);
    partial void UpdateSixMonthPlan(SixMonthPlan instance);
    partial void DeleteSixMonthPlan(SixMonthPlan instance);
    partial void InsertWorkPlanforNextYear(WorkPlanforNextYear instance);
    partial void UpdateWorkPlanforNextYear(WorkPlanforNextYear instance);
    partial void DeleteWorkPlanforNextYear(WorkPlanforNextYear instance);
    partial void InsertAnnualColleagueEvaluation(AnnualColleagueEvaluation instance);
    partial void UpdateAnnualColleagueEvaluation(AnnualColleagueEvaluation instance);
    partial void DeleteAnnualColleagueEvaluation(AnnualColleagueEvaluation instance);
    partial void InsertLKColleagueFeedBAckPoint(LKColleagueFeedBAckPoint instance);
    partial void UpdateLKColleagueFeedBAckPoint(LKColleagueFeedBAckPoint instance);
    partial void DeleteLKColleagueFeedBAckPoint(LKColleagueFeedBAckPoint instance);
    partial void InsertAnnualLineManagerEvaluation(AnnualLineManagerEvaluation instance);
    partial void UpdateAnnualLineManagerEvaluation(AnnualLineManagerEvaluation instance);
    partial void DeleteAnnualLineManagerEvaluation(AnnualLineManagerEvaluation instance);
    partial void InsertLKLineMgrFeedBAckPoint(LKLineMgrFeedBAckPoint instance);
    partial void UpdateLKLineMgrFeedBAckPoint(LKLineMgrFeedBAckPoint instance);
    partial void DeleteLKLineMgrFeedBAckPoint(LKLineMgrFeedBAckPoint instance);
    partial void InsertAreaOfAchievement(AreaOfAchievement instance);
    partial void UpdateAreaOfAchievement(AreaOfAchievement instance);
    partial void DeleteAreaOfAchievement(AreaOfAchievement instance);
    partial void InsertAreaOfImprovement(AreaOfImprovement instance);
    partial void UpdateAreaOfImprovement(AreaOfImprovement instance);
    partial void DeleteAreaOfImprovement(AreaOfImprovement instance);
    partial void InsertAdministrativeRelatedIssuePerformance(AdministrativeRelatedIssuePerformance instance);
    partial void UpdateAdministrativeRelatedIssuePerformance(AdministrativeRelatedIssuePerformance instance);
    partial void DeleteAdministrativeRelatedIssuePerformance(AdministrativeRelatedIssuePerformance instance);
    partial void InsertMarketingRelatedIssuePerformance(MarketingRelatedIssuePerformance instance);
    partial void UpdateMarketingRelatedIssuePerformance(MarketingRelatedIssuePerformance instance);
    partial void DeleteMarketingRelatedIssuePerformance(MarketingRelatedIssuePerformance instance);
    partial void InsertOverAllGeneralPerformance(OverAllGeneralPerformance instance);
    partial void UpdateOverAllGeneralPerformance(OverAllGeneralPerformance instance);
    partial void DeleteOverAllGeneralPerformance(OverAllGeneralPerformance instance);
    partial void InsertAddionalPAGRelatedGeneral(AddionalPAGRelatedGeneral instance);
    partial void UpdateAddionalPAGRelatedGeneral(AddionalPAGRelatedGeneral instance);
    partial void DeleteAddionalPAGRelatedGeneral(AddionalPAGRelatedGeneral instance);
    partial void InsertAnnualEmployeeEvaluationNote(AnnualEmployeeEvaluationNote instance);
    partial void UpdateAnnualEmployeeEvaluationNote(AnnualEmployeeEvaluationNote instance);
    partial void DeleteAnnualEmployeeEvaluationNote(AnnualEmployeeEvaluationNote instance);
    partial void InsertAnnualEmployeeEvaluationYesNo(AnnualEmployeeEvaluationYesNo instance);
    partial void UpdateAnnualEmployeeEvaluationYesNo(AnnualEmployeeEvaluationYesNo instance);
    partial void DeleteAnnualEmployeeEvaluationYesNo(AnnualEmployeeEvaluationYesNo instance);
    partial void InsertLKEmployeesToLineMGREvaluation(LKEmployeesToLineMGREvaluation instance);
    partial void UpdateLKEmployeesToLineMGREvaluation(LKEmployeesToLineMGREvaluation instance);
    partial void DeleteLKEmployeesToLineMGREvaluation(LKEmployeesToLineMGREvaluation instance);
    partial void InsertEmployeesToLineMGREvaluation(EmployeesToLineMGREvaluation instance);
    partial void UpdateEmployeesToLineMGREvaluation(EmployeesToLineMGREvaluation instance);
    partial void DeleteEmployeesToLineMGREvaluation(EmployeesToLineMGREvaluation instance);
    partial void InsertEmployeesToLineMGREvaluationForm(EmployeesToLineMGREvaluationForm instance);
    partial void UpdateEmployeesToLineMGREvaluationForm(EmployeesToLineMGREvaluationForm instance);
    partial void DeleteEmployeesToLineMGREvaluationForm(EmployeesToLineMGREvaluationForm instance);
    partial void InsertCEOCommentOnAnnualEvaluation(CEOCommentOnAnnualEvaluation instance);
    partial void UpdateCEOCommentOnAnnualEvaluation(CEOCommentOnAnnualEvaluation instance);
    partial void DeleteCEOCommentOnAnnualEvaluation(CEOCommentOnAnnualEvaluation instance);
    partial void InsertSubmitedAnnualForm(SubmitedAnnualForm instance);
    partial void UpdateSubmitedAnnualForm(SubmitedAnnualForm instance);
    partial void DeleteSubmitedAnnualForm(SubmitedAnnualForm instance);
    partial void InsertEvaluationDisclosure(EvaluationDisclosure instance);
    partial void UpdateEvaluationDisclosure(EvaluationDisclosure instance);
    partial void DeleteEvaluationDisclosure(EvaluationDisclosure instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployee_evaluatorColleague(Employee_evaluatorColleague instance);
    partial void UpdateEmployee_evaluatorColleague(Employee_evaluatorColleague instance);
    partial void DeleteEmployee_evaluatorColleague(Employee_evaluatorColleague instance);
    #endregion
		
		public PerformanceEvaluationDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PerformaceEvaluationConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PerformanceEvaluationDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PerformanceEvaluationDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PerformanceEvaluationDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PerformanceEvaluationDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EvaluationPeriod> EvaluationPeriods
		{
			get
			{
				return this.GetTable<EvaluationPeriod>();
			}
		}
		
		public System.Data.Linq.Table<LKDatatype> LKDatatypes
		{
			get
			{
				return this.GetTable<LKDatatype>();
			}
		}
		
		public System.Data.Linq.Table<LKUsersRole> LKUsersRoles
		{
			get
			{
				return this.GetTable<LKUsersRole>();
			}
		}
		
		public System.Data.Linq.Table<UsersLogIn> UsersLogIns
		{
			get
			{
				return this.GetTable<UsersLogIn>();
			}
		}
		
		public System.Data.Linq.Table<View_Employe_User> View_Employe_Users
		{
			get
			{
				return this.GetTable<View_Employe_User>();
			}
		}
		
		public System.Data.Linq.Table<View_Employe_User1> View_Employe_User1s
		{
			get
			{
				return this.GetTable<View_Employe_User1>();
			}
		}
		
		public System.Data.Linq.Table<Employee_LineManager> Employee_LineManagers
		{
			get
			{
				return this.GetTable<Employee_LineManager>();
			}
		}
		
		public System.Data.Linq.Table<View_EmployessList> View_EmployessLists
		{
			get
			{
				return this.GetTable<View_EmployessList>();
			}
		}
		
		public System.Data.Linq.Table<LKEvaluationPoint> LKEvaluationPoints
		{
			get
			{
				return this.GetTable<LKEvaluationPoint>();
			}
		}
		
		public System.Data.Linq.Table<LKSixMonthPlan> LKSixMonthPlans
		{
			get
			{
				return this.GetTable<LKSixMonthPlan>();
			}
		}
		
		public System.Data.Linq.Table<EvaluatedPoint> EvaluatedPoints
		{
			get
			{
				return this.GetTable<EvaluatedPoint>();
			}
		}
		
		public System.Data.Linq.Table<SixMonthPlan> SixMonthPlans
		{
			get
			{
				return this.GetTable<SixMonthPlan>();
			}
		}
		
		public System.Data.Linq.Table<WorkPlanforNextYear> WorkPlanforNextYears
		{
			get
			{
				return this.GetTable<WorkPlanforNextYear>();
			}
		}
		
		public System.Data.Linq.Table<AnnualColleagueEvaluation> AnnualColleagueEvaluations
		{
			get
			{
				return this.GetTable<AnnualColleagueEvaluation>();
			}
		}
		
		public System.Data.Linq.Table<LKColleagueFeedBAckPoint> LKColleagueFeedBAckPoints
		{
			get
			{
				return this.GetTable<LKColleagueFeedBAckPoint>();
			}
		}
		
		public System.Data.Linq.Table<AnnualLineManagerEvaluation> AnnualLineManagerEvaluations
		{
			get
			{
				return this.GetTable<AnnualLineManagerEvaluation>();
			}
		}
		
		public System.Data.Linq.Table<LKLineMgrFeedBAckPoint> LKLineMgrFeedBAckPoints
		{
			get
			{
				return this.GetTable<LKLineMgrFeedBAckPoint>();
			}
		}
		
		public System.Data.Linq.Table<View_employe_EvaluatorCollueage> View_employe_EvaluatorCollueages
		{
			get
			{
				return this.GetTable<View_employe_EvaluatorCollueage>();
			}
		}
		
		public System.Data.Linq.Table<AreaOfAchievement> AreaOfAchievements
		{
			get
			{
				return this.GetTable<AreaOfAchievement>();
			}
		}
		
		public System.Data.Linq.Table<AreaOfImprovement> AreaOfImprovements
		{
			get
			{
				return this.GetTable<AreaOfImprovement>();
			}
		}
		
		public System.Data.Linq.Table<AdministrativeRelatedIssuePerformance> AdministrativeRelatedIssuePerformances
		{
			get
			{
				return this.GetTable<AdministrativeRelatedIssuePerformance>();
			}
		}
		
		public System.Data.Linq.Table<MarketingRelatedIssuePerformance> MarketingRelatedIssuePerformances
		{
			get
			{
				return this.GetTable<MarketingRelatedIssuePerformance>();
			}
		}
		
		public System.Data.Linq.Table<OverAllGeneralPerformance> OverAllGeneralPerformances
		{
			get
			{
				return this.GetTable<OverAllGeneralPerformance>();
			}
		}
		
		public System.Data.Linq.Table<AddionalPAGRelatedGeneral> AddionalPAGRelatedGenerals
		{
			get
			{
				return this.GetTable<AddionalPAGRelatedGeneral>();
			}
		}
		
		public System.Data.Linq.Table<AnnualEmployeeEvaluationNote> AnnualEmployeeEvaluationNotes
		{
			get
			{
				return this.GetTable<AnnualEmployeeEvaluationNote>();
			}
		}
		
		public System.Data.Linq.Table<AnnualEmployeeEvaluationYesNo> AnnualEmployeeEvaluationYesNos
		{
			get
			{
				return this.GetTable<AnnualEmployeeEvaluationYesNo>();
			}
		}
		
		public System.Data.Linq.Table<View_LineMAnagersEmploye> View_LineMAnagersEmployes
		{
			get
			{
				return this.GetTable<View_LineMAnagersEmploye>();
			}
		}
		
		public System.Data.Linq.Table<LKEmployeesToLineMGREvaluation> LKEmployeesToLineMGREvaluations
		{
			get
			{
				return this.GetTable<LKEmployeesToLineMGREvaluation>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesToLineMGREvaluation> EmployeesToLineMGREvaluations
		{
			get
			{
				return this.GetTable<EmployeesToLineMGREvaluation>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesToLineMGREvaluationForm> EmployeesToLineMGREvaluationForms
		{
			get
			{
				return this.GetTable<EmployeesToLineMGREvaluationForm>();
			}
		}
		
		public System.Data.Linq.Table<CEOCommentOnAnnualEvaluation> CEOCommentOnAnnualEvaluations
		{
			get
			{
				return this.GetTable<CEOCommentOnAnnualEvaluation>();
			}
		}
		
		public System.Data.Linq.Table<SubmitedAnnualForm> SubmitedAnnualForms
		{
			get
			{
				return this.GetTable<SubmitedAnnualForm>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationDisclosure> EvaluationDisclosures
		{
			get
			{
				return this.GetTable<EvaluationDisclosure>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Employee_evaluatorColleague> Employee_evaluatorColleagues
		{
			get
			{
				return this.GetTable<Employee_evaluatorColleague>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationPeriod")]
	public partial class EvaluationPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EvaluationPeriod1;
		
		private string _isClosed;
		
		private EntitySet<Employee_LineManager> _Employee_LineManagers;
		
		private EntitySet<EvaluatedPoint> _EvaluatedPoints;
		
		private EntitySet<SixMonthPlan> _SixMonthPlans;
		
		private EntitySet<WorkPlanforNextYear> _WorkPlanforNextYears;
		
		private EntitySet<AnnualColleagueEvaluation> _AnnualColleagueEvaluations;
		
		private EntitySet<AnnualLineManagerEvaluation> _AnnualLineManagerEvaluations;
		
		private EntitySet<AreaOfAchievement> _AreaOfAchievements;
		
		private EntitySet<AreaOfImprovement> _AreaOfImprovements;
		
		private EntitySet<AdministrativeRelatedIssuePerformance> _AdministrativeRelatedIssuePerformances;
		
		private EntitySet<MarketingRelatedIssuePerformance> _MarketingRelatedIssuePerformances;
		
		private EntitySet<OverAllGeneralPerformance> _OverAllGeneralPerformances;
		
		private EntitySet<AddionalPAGRelatedGeneral> _AddionalPAGRelatedGenerals;
		
		private EntitySet<AnnualEmployeeEvaluationNote> _AnnualEmployeeEvaluationNotes;
		
		private EntitySet<AnnualEmployeeEvaluationYesNo> _AnnualEmployeeEvaluationYesNos;
		
		private EntitySet<EmployeesToLineMGREvaluation> _EmployeesToLineMGREvaluations;
		
		private EntitySet<EmployeesToLineMGREvaluationForm> _EmployeesToLineMGREvaluationForms;
		
		private EntitySet<CEOCommentOnAnnualEvaluation> _CEOCommentOnAnnualEvaluations;
		
		private EntitySet<SubmitedAnnualForm> _SubmitedAnnualForms;
		
		private EntitySet<EvaluationDisclosure> _EvaluationDisclosures;
		
		private EntitySet<EvaluationDisclosure> _EvaluationDisclosures1;
		
		private EntitySet<Employee_evaluatorColleague> _Employee_evaluatorColleagues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationPeriod1Changing(string value);
    partial void OnEvaluationPeriod1Changed();
    partial void OnisClosedChanging(string value);
    partial void OnisClosedChanged();
    #endregion
		
		public EvaluationPeriod()
		{
			this._Employee_LineManagers = new EntitySet<Employee_LineManager>(new Action<Employee_LineManager>(this.attach_Employee_LineManagers), new Action<Employee_LineManager>(this.detach_Employee_LineManagers));
			this._EvaluatedPoints = new EntitySet<EvaluatedPoint>(new Action<EvaluatedPoint>(this.attach_EvaluatedPoints), new Action<EvaluatedPoint>(this.detach_EvaluatedPoints));
			this._SixMonthPlans = new EntitySet<SixMonthPlan>(new Action<SixMonthPlan>(this.attach_SixMonthPlans), new Action<SixMonthPlan>(this.detach_SixMonthPlans));
			this._WorkPlanforNextYears = new EntitySet<WorkPlanforNextYear>(new Action<WorkPlanforNextYear>(this.attach_WorkPlanforNextYears), new Action<WorkPlanforNextYear>(this.detach_WorkPlanforNextYears));
			this._AnnualColleagueEvaluations = new EntitySet<AnnualColleagueEvaluation>(new Action<AnnualColleagueEvaluation>(this.attach_AnnualColleagueEvaluations), new Action<AnnualColleagueEvaluation>(this.detach_AnnualColleagueEvaluations));
			this._AnnualLineManagerEvaluations = new EntitySet<AnnualLineManagerEvaluation>(new Action<AnnualLineManagerEvaluation>(this.attach_AnnualLineManagerEvaluations), new Action<AnnualLineManagerEvaluation>(this.detach_AnnualLineManagerEvaluations));
			this._AreaOfAchievements = new EntitySet<AreaOfAchievement>(new Action<AreaOfAchievement>(this.attach_AreaOfAchievements), new Action<AreaOfAchievement>(this.detach_AreaOfAchievements));
			this._AreaOfImprovements = new EntitySet<AreaOfImprovement>(new Action<AreaOfImprovement>(this.attach_AreaOfImprovements), new Action<AreaOfImprovement>(this.detach_AreaOfImprovements));
			this._AdministrativeRelatedIssuePerformances = new EntitySet<AdministrativeRelatedIssuePerformance>(new Action<AdministrativeRelatedIssuePerformance>(this.attach_AdministrativeRelatedIssuePerformances), new Action<AdministrativeRelatedIssuePerformance>(this.detach_AdministrativeRelatedIssuePerformances));
			this._MarketingRelatedIssuePerformances = new EntitySet<MarketingRelatedIssuePerformance>(new Action<MarketingRelatedIssuePerformance>(this.attach_MarketingRelatedIssuePerformances), new Action<MarketingRelatedIssuePerformance>(this.detach_MarketingRelatedIssuePerformances));
			this._OverAllGeneralPerformances = new EntitySet<OverAllGeneralPerformance>(new Action<OverAllGeneralPerformance>(this.attach_OverAllGeneralPerformances), new Action<OverAllGeneralPerformance>(this.detach_OverAllGeneralPerformances));
			this._AddionalPAGRelatedGenerals = new EntitySet<AddionalPAGRelatedGeneral>(new Action<AddionalPAGRelatedGeneral>(this.attach_AddionalPAGRelatedGenerals), new Action<AddionalPAGRelatedGeneral>(this.detach_AddionalPAGRelatedGenerals));
			this._AnnualEmployeeEvaluationNotes = new EntitySet<AnnualEmployeeEvaluationNote>(new Action<AnnualEmployeeEvaluationNote>(this.attach_AnnualEmployeeEvaluationNotes), new Action<AnnualEmployeeEvaluationNote>(this.detach_AnnualEmployeeEvaluationNotes));
			this._AnnualEmployeeEvaluationYesNos = new EntitySet<AnnualEmployeeEvaluationYesNo>(new Action<AnnualEmployeeEvaluationYesNo>(this.attach_AnnualEmployeeEvaluationYesNos), new Action<AnnualEmployeeEvaluationYesNo>(this.detach_AnnualEmployeeEvaluationYesNos));
			this._EmployeesToLineMGREvaluations = new EntitySet<EmployeesToLineMGREvaluation>(new Action<EmployeesToLineMGREvaluation>(this.attach_EmployeesToLineMGREvaluations), new Action<EmployeesToLineMGREvaluation>(this.detach_EmployeesToLineMGREvaluations));
			this._EmployeesToLineMGREvaluationForms = new EntitySet<EmployeesToLineMGREvaluationForm>(new Action<EmployeesToLineMGREvaluationForm>(this.attach_EmployeesToLineMGREvaluationForms), new Action<EmployeesToLineMGREvaluationForm>(this.detach_EmployeesToLineMGREvaluationForms));
			this._CEOCommentOnAnnualEvaluations = new EntitySet<CEOCommentOnAnnualEvaluation>(new Action<CEOCommentOnAnnualEvaluation>(this.attach_CEOCommentOnAnnualEvaluations), new Action<CEOCommentOnAnnualEvaluation>(this.detach_CEOCommentOnAnnualEvaluations));
			this._SubmitedAnnualForms = new EntitySet<SubmitedAnnualForm>(new Action<SubmitedAnnualForm>(this.attach_SubmitedAnnualForms), new Action<SubmitedAnnualForm>(this.detach_SubmitedAnnualForms));
			this._EvaluationDisclosures = new EntitySet<EvaluationDisclosure>(new Action<EvaluationDisclosure>(this.attach_EvaluationDisclosures), new Action<EvaluationDisclosure>(this.detach_EvaluationDisclosures));
			this._EvaluationDisclosures1 = new EntitySet<EvaluationDisclosure>(new Action<EvaluationDisclosure>(this.attach_EvaluationDisclosures1), new Action<EvaluationDisclosure>(this.detach_EvaluationDisclosures1));
			this._Employee_evaluatorColleagues = new EntitySet<Employee_evaluatorColleague>(new Action<Employee_evaluatorColleague>(this.attach_Employee_evaluatorColleagues), new Action<Employee_evaluatorColleague>(this.detach_Employee_evaluatorColleagues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EvaluationPeriod", Storage="_EvaluationPeriod1", DbType="NVarChar(250)")]
		public string EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1;
			}
			set
			{
				if ((this._EvaluationPeriod1 != value))
				{
					this.OnEvaluationPeriod1Changing(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod1 = value;
					this.SendPropertyChanged("EvaluationPeriod1");
					this.OnEvaluationPeriod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isClosed", DbType="NVarChar(1)")]
		public string isClosed
		{
			get
			{
				return this._isClosed;
			}
			set
			{
				if ((this._isClosed != value))
				{
					this.OnisClosedChanging(value);
					this.SendPropertyChanging();
					this._isClosed = value;
					this.SendPropertyChanged("isClosed");
					this.OnisClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_Employee_LineManager", Storage="_Employee_LineManagers", ThisKey="Id", OtherKey="period")]
		public EntitySet<Employee_LineManager> Employee_LineManagers
		{
			get
			{
				return this._Employee_LineManagers;
			}
			set
			{
				this._Employee_LineManagers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EvaluatedPoint", Storage="_EvaluatedPoints", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<EvaluatedPoint> EvaluatedPoints
		{
			get
			{
				return this._EvaluatedPoints;
			}
			set
			{
				this._EvaluatedPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_SixMonthPlan", Storage="_SixMonthPlans", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<SixMonthPlan> SixMonthPlans
		{
			get
			{
				return this._SixMonthPlans;
			}
			set
			{
				this._SixMonthPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_WorkPlanforNextYear", Storage="_WorkPlanforNextYears", ThisKey="Id", OtherKey="EvaluationPlanPeriod")]
		public EntitySet<WorkPlanforNextYear> WorkPlanforNextYears
		{
			get
			{
				return this._WorkPlanforNextYears;
			}
			set
			{
				this._WorkPlanforNextYears.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualColleagueEvaluation", Storage="_AnnualColleagueEvaluations", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AnnualColleagueEvaluation> AnnualColleagueEvaluations
		{
			get
			{
				return this._AnnualColleagueEvaluations;
			}
			set
			{
				this._AnnualColleagueEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualLineManagerEvaluation", Storage="_AnnualLineManagerEvaluations", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AnnualLineManagerEvaluation> AnnualLineManagerEvaluations
		{
			get
			{
				return this._AnnualLineManagerEvaluations;
			}
			set
			{
				this._AnnualLineManagerEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AreaOfAchievement", Storage="_AreaOfAchievements", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AreaOfAchievement> AreaOfAchievements
		{
			get
			{
				return this._AreaOfAchievements;
			}
			set
			{
				this._AreaOfAchievements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AreaOfImprovement", Storage="_AreaOfImprovements", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AreaOfImprovement> AreaOfImprovements
		{
			get
			{
				return this._AreaOfImprovements;
			}
			set
			{
				this._AreaOfImprovements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AdministrativeRelatedIssuePerformance", Storage="_AdministrativeRelatedIssuePerformances", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AdministrativeRelatedIssuePerformance> AdministrativeRelatedIssuePerformances
		{
			get
			{
				return this._AdministrativeRelatedIssuePerformances;
			}
			set
			{
				this._AdministrativeRelatedIssuePerformances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_MarketingRelatedIssuePerformance", Storage="_MarketingRelatedIssuePerformances", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<MarketingRelatedIssuePerformance> MarketingRelatedIssuePerformances
		{
			get
			{
				return this._MarketingRelatedIssuePerformances;
			}
			set
			{
				this._MarketingRelatedIssuePerformances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_OverAllGeneralPerformance", Storage="_OverAllGeneralPerformances", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<OverAllGeneralPerformance> OverAllGeneralPerformances
		{
			get
			{
				return this._OverAllGeneralPerformances;
			}
			set
			{
				this._OverAllGeneralPerformances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AddionalPAGRelatedGeneral", Storage="_AddionalPAGRelatedGenerals", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AddionalPAGRelatedGeneral> AddionalPAGRelatedGenerals
		{
			get
			{
				return this._AddionalPAGRelatedGenerals;
			}
			set
			{
				this._AddionalPAGRelatedGenerals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualEmployeeEvaluationNote", Storage="_AnnualEmployeeEvaluationNotes", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AnnualEmployeeEvaluationNote> AnnualEmployeeEvaluationNotes
		{
			get
			{
				return this._AnnualEmployeeEvaluationNotes;
			}
			set
			{
				this._AnnualEmployeeEvaluationNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualEmployeeEvaluationYesNo", Storage="_AnnualEmployeeEvaluationYesNos", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<AnnualEmployeeEvaluationYesNo> AnnualEmployeeEvaluationYesNos
		{
			get
			{
				return this._AnnualEmployeeEvaluationYesNos;
			}
			set
			{
				this._AnnualEmployeeEvaluationYesNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EmployeesToLineMGREvaluation", Storage="_EmployeesToLineMGREvaluations", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<EmployeesToLineMGREvaluation> EmployeesToLineMGREvaluations
		{
			get
			{
				return this._EmployeesToLineMGREvaluations;
			}
			set
			{
				this._EmployeesToLineMGREvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EmployeesToLineMGREvaluationForm", Storage="_EmployeesToLineMGREvaluationForms", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<EmployeesToLineMGREvaluationForm> EmployeesToLineMGREvaluationForms
		{
			get
			{
				return this._EmployeesToLineMGREvaluationForms;
			}
			set
			{
				this._EmployeesToLineMGREvaluationForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_CEOCommentOnAnnualEvaluation", Storage="_CEOCommentOnAnnualEvaluations", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<CEOCommentOnAnnualEvaluation> CEOCommentOnAnnualEvaluations
		{
			get
			{
				return this._CEOCommentOnAnnualEvaluations;
			}
			set
			{
				this._CEOCommentOnAnnualEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_SubmitedAnnualForm", Storage="_SubmitedAnnualForms", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<SubmitedAnnualForm> SubmitedAnnualForms
		{
			get
			{
				return this._SubmitedAnnualForms;
			}
			set
			{
				this._SubmitedAnnualForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EvaluationDisclosure", Storage="_EvaluationDisclosures", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<EvaluationDisclosure> EvaluationDisclosures
		{
			get
			{
				return this._EvaluationDisclosures;
			}
			set
			{
				this._EvaluationDisclosures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EvaluationDisclosure1", Storage="_EvaluationDisclosures1", ThisKey="Id", OtherKey="EvaluationPeriod")]
		public EntitySet<EvaluationDisclosure> EvaluationDisclosures1
		{
			get
			{
				return this._EvaluationDisclosures1;
			}
			set
			{
				this._EvaluationDisclosures1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_Employee_evaluatorColleague", Storage="_Employee_evaluatorColleagues", ThisKey="Id", OtherKey="period")]
		public EntitySet<Employee_evaluatorColleague> Employee_evaluatorColleagues
		{
			get
			{
				return this._Employee_evaluatorColleagues;
			}
			set
			{
				this._Employee_evaluatorColleagues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee_LineManagers(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod = this;
		}
		
		private void detach_Employee_LineManagers(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod = null;
		}
		
		private void attach_EvaluatedPoints(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_EvaluatedPoints(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_SixMonthPlans(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_SixMonthPlans(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_WorkPlanforNextYears(WorkPlanforNextYear entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod = this;
		}
		
		private void detach_WorkPlanforNextYears(WorkPlanforNextYear entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod = null;
		}
		
		private void attach_AnnualColleagueEvaluations(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AnnualColleagueEvaluations(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AnnualLineManagerEvaluations(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AnnualLineManagerEvaluations(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AreaOfAchievements(AreaOfAchievement entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AreaOfAchievements(AreaOfAchievement entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AreaOfImprovements(AreaOfImprovement entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AreaOfImprovements(AreaOfImprovement entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AdministrativeRelatedIssuePerformances(AdministrativeRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AdministrativeRelatedIssuePerformances(AdministrativeRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_MarketingRelatedIssuePerformances(MarketingRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_MarketingRelatedIssuePerformances(MarketingRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_OverAllGeneralPerformances(OverAllGeneralPerformance entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_OverAllGeneralPerformances(OverAllGeneralPerformance entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AddionalPAGRelatedGenerals(AddionalPAGRelatedGeneral entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AddionalPAGRelatedGenerals(AddionalPAGRelatedGeneral entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AnnualEmployeeEvaluationNotes(AnnualEmployeeEvaluationNote entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AnnualEmployeeEvaluationNotes(AnnualEmployeeEvaluationNote entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_AnnualEmployeeEvaluationYesNos(AnnualEmployeeEvaluationYesNo entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_AnnualEmployeeEvaluationYesNos(AnnualEmployeeEvaluationYesNo entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_EmployeesToLineMGREvaluations(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_EmployeesToLineMGREvaluations(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_EmployeesToLineMGREvaluationForms(EmployeesToLineMGREvaluationForm entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_EmployeesToLineMGREvaluationForms(EmployeesToLineMGREvaluationForm entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_CEOCommentOnAnnualEvaluations(CEOCommentOnAnnualEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_CEOCommentOnAnnualEvaluations(CEOCommentOnAnnualEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_SubmitedAnnualForms(SubmitedAnnualForm entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_SubmitedAnnualForms(SubmitedAnnualForm entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_EvaluationDisclosures(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = this;
		}
		
		private void detach_EvaluationDisclosures(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod1 = null;
		}
		
		private void attach_EvaluationDisclosures1(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod2 = this;
		}
		
		private void detach_EvaluationDisclosures1(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod2 = null;
		}
		
		private void attach_Employee_evaluatorColleagues(Employee_evaluatorColleague entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod = this;
		}
		
		private void detach_Employee_evaluatorColleagues(Employee_evaluatorColleague entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKDatatypes")]
	public partial class LKDatatype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private string _Remarks;
		
		private EntitySet<LKEvaluationPoint> _LKEvaluationPoints;
		
		private EntitySet<LKSixMonthPlan> _LKSixMonthPlans;
		
		private EntitySet<LKColleagueFeedBAckPoint> _LKColleagueFeedBAckPoints;
		
		private EntitySet<LKLineMgrFeedBAckPoint> _LKLineMgrFeedBAckPoints;
		
		private EntitySet<LKEmployeesToLineMGREvaluation> _LKEmployeesToLineMGREvaluations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public LKDatatype()
		{
			this._LKEvaluationPoints = new EntitySet<LKEvaluationPoint>(new Action<LKEvaluationPoint>(this.attach_LKEvaluationPoints), new Action<LKEvaluationPoint>(this.detach_LKEvaluationPoints));
			this._LKSixMonthPlans = new EntitySet<LKSixMonthPlan>(new Action<LKSixMonthPlan>(this.attach_LKSixMonthPlans), new Action<LKSixMonthPlan>(this.detach_LKSixMonthPlans));
			this._LKColleagueFeedBAckPoints = new EntitySet<LKColleagueFeedBAckPoint>(new Action<LKColleagueFeedBAckPoint>(this.attach_LKColleagueFeedBAckPoints), new Action<LKColleagueFeedBAckPoint>(this.detach_LKColleagueFeedBAckPoints));
			this._LKLineMgrFeedBAckPoints = new EntitySet<LKLineMgrFeedBAckPoint>(new Action<LKLineMgrFeedBAckPoint>(this.attach_LKLineMgrFeedBAckPoints), new Action<LKLineMgrFeedBAckPoint>(this.detach_LKLineMgrFeedBAckPoints));
			this._LKEmployeesToLineMGREvaluations = new EntitySet<LKEmployeesToLineMGREvaluation>(new Action<LKEmployeesToLineMGREvaluation>(this.attach_LKEmployeesToLineMGREvaluations), new Action<LKEmployeesToLineMGREvaluation>(this.detach_LKEmployeesToLineMGREvaluations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(250)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(250)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKEvaluationPoint", Storage="_LKEvaluationPoints", ThisKey="Id", OtherKey="DataTypes")]
		public EntitySet<LKEvaluationPoint> LKEvaluationPoints
		{
			get
			{
				return this._LKEvaluationPoints;
			}
			set
			{
				this._LKEvaluationPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKSixMonthPlan", Storage="_LKSixMonthPlans", ThisKey="Id", OtherKey="DataTypeSelection")]
		public EntitySet<LKSixMonthPlan> LKSixMonthPlans
		{
			get
			{
				return this._LKSixMonthPlans;
			}
			set
			{
				this._LKSixMonthPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKColleagueFeedBAckPoint", Storage="_LKColleagueFeedBAckPoints", ThisKey="Id", OtherKey="DataType")]
		public EntitySet<LKColleagueFeedBAckPoint> LKColleagueFeedBAckPoints
		{
			get
			{
				return this._LKColleagueFeedBAckPoints;
			}
			set
			{
				this._LKColleagueFeedBAckPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKLineMgrFeedBAckPoint", Storage="_LKLineMgrFeedBAckPoints", ThisKey="Id", OtherKey="DataTypes")]
		public EntitySet<LKLineMgrFeedBAckPoint> LKLineMgrFeedBAckPoints
		{
			get
			{
				return this._LKLineMgrFeedBAckPoints;
			}
			set
			{
				this._LKLineMgrFeedBAckPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKEmployeesToLineMGREvaluation", Storage="_LKEmployeesToLineMGREvaluations", ThisKey="Id", OtherKey="DataTypes")]
		public EntitySet<LKEmployeesToLineMGREvaluation> LKEmployeesToLineMGREvaluations
		{
			get
			{
				return this._LKEmployeesToLineMGREvaluations;
			}
			set
			{
				this._LKEmployeesToLineMGREvaluations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LKEvaluationPoints(LKEvaluationPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = this;
		}
		
		private void detach_LKEvaluationPoints(LKEvaluationPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = null;
		}
		
		private void attach_LKSixMonthPlans(LKSixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = this;
		}
		
		private void detach_LKSixMonthPlans(LKSixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = null;
		}
		
		private void attach_LKColleagueFeedBAckPoints(LKColleagueFeedBAckPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = this;
		}
		
		private void detach_LKColleagueFeedBAckPoints(LKColleagueFeedBAckPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = null;
		}
		
		private void attach_LKLineMgrFeedBAckPoints(LKLineMgrFeedBAckPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = this;
		}
		
		private void detach_LKLineMgrFeedBAckPoints(LKLineMgrFeedBAckPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = null;
		}
		
		private void attach_LKEmployeesToLineMGREvaluations(LKEmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = this;
		}
		
		private void detach_LKEmployeesToLineMGREvaluations(LKEmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKDatatype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKUsersRoles")]
	public partial class LKUsersRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RoleName;
		
		private string _statusRemark;
		
		private EntitySet<UsersLogIn> _UsersLogIns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnstatusRemarkChanging(string value);
    partial void OnstatusRemarkChanged();
    #endregion
		
		public LKUsersRole()
		{
			this._UsersLogIns = new EntitySet<UsersLogIn>(new Action<UsersLogIn>(this.attach_UsersLogIns), new Action<UsersLogIn>(this.detach_UsersLogIns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusRemark", DbType="NVarChar(250)")]
		public string statusRemark
		{
			get
			{
				return this._statusRemark;
			}
			set
			{
				if ((this._statusRemark != value))
				{
					this.OnstatusRemarkChanging(value);
					this.SendPropertyChanging();
					this._statusRemark = value;
					this.SendPropertyChanged("statusRemark");
					this.OnstatusRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKUsersRole_UsersLogIn", Storage="_UsersLogIns", ThisKey="Id", OtherKey="UserRole")]
		public EntitySet<UsersLogIn> UsersLogIns
		{
			get
			{
				return this._UsersLogIns;
			}
			set
			{
				this._UsersLogIns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersLogIns(UsersLogIn entity)
		{
			this.SendPropertyChanging();
			entity.LKUsersRole = this;
		}
		
		private void detach_UsersLogIns(UsersLogIn entity)
		{
			this.SendPropertyChanging();
			entity.LKUsersRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersLogIn")]
	public partial class UsersLogIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Pwd;
		
		private string _IsActive;
		
		private string _CompanyId;
		
		private System.Nullable<int> _UserRole;
		
		private EntityRef<LKUsersRole> _LKUsersRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnIsActiveChanging(string value);
    partial void OnIsActiveChanged();
    partial void OnCompanyIdChanging(string value);
    partial void OnCompanyIdChanged();
    partial void OnUserRoleChanging(System.Nullable<int> value);
    partial void OnUserRoleChanged();
    #endregion
		
		public UsersLogIn()
		{
			this._LKUsersRole = default(EntityRef<LKUsersRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(250)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(250)")]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="NVarChar(10)")]
		public string IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(MAX)")]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="Int")]
		public System.Nullable<int> UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					if (this._LKUsersRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKUsersRole_UsersLogIn", Storage="_LKUsersRole", ThisKey="UserRole", OtherKey="Id", IsForeignKey=true)]
		public LKUsersRole LKUsersRole
		{
			get
			{
				return this._LKUsersRole.Entity;
			}
			set
			{
				LKUsersRole previousValue = this._LKUsersRole.Entity;
				if (((previousValue != value) 
							|| (this._LKUsersRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKUsersRole.Entity = null;
						previousValue.UsersLogIns.Remove(this);
					}
					this._LKUsersRole.Entity = value;
					if ((value != null))
					{
						value.UsersLogIns.Add(this);
						this._UserRole = value.Id;
					}
					else
					{
						this._UserRole = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKUsersRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Employe_User")]
	public partial class View_Employe_User
	{
		
		private int _IDEmp;
		
		private string _EName;
		
		private string _ELName;
		
		private string _ENameAM;
		
		private string _ELNameAM;
		
		private string _JobPosition;
		
		private string _JobPositionAM;
		
		private string _ISActiveEmp;
		
		private string _CompanyIDEmp;
		
		private int _IDUser;
		
		private string _UserName;
		
		private string _Pwd;
		
		private string _IsActiveUser;
		
		private string _CompanyIdUser;
		
		private System.Nullable<int> _UserRole;
		
		private int _IDLKUserRole;
		
		private string _RoleName;
		
		private string _statusRemark;
		
		public View_Employe_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmp", DbType="Int NOT NULL")]
		public int IDEmp
		{
			get
			{
				return this._IDEmp;
			}
			set
			{
				if ((this._IDEmp != value))
				{
					this._IDEmp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(250)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this._EName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELName", DbType="NVarChar(250)")]
		public string ELName
		{
			get
			{
				return this._ELName;
			}
			set
			{
				if ((this._ELName != value))
				{
					this._ELName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENameAM", DbType="NVarChar(250)")]
		public string ENameAM
		{
			get
			{
				return this._ENameAM;
			}
			set
			{
				if ((this._ENameAM != value))
				{
					this._ENameAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELNameAM", DbType="NVarChar(250)")]
		public string ELNameAM
		{
			get
			{
				return this._ELNameAM;
			}
			set
			{
				if ((this._ELNameAM != value))
				{
					this._ELNameAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPosition", DbType="NVarChar(250)")]
		public string JobPosition
		{
			get
			{
				return this._JobPosition;
			}
			set
			{
				if ((this._JobPosition != value))
				{
					this._JobPosition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPositionAM", DbType="NVarChar(250)")]
		public string JobPositionAM
		{
			get
			{
				return this._JobPositionAM;
			}
			set
			{
				if ((this._JobPositionAM != value))
				{
					this._JobPositionAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISActiveEmp", DbType="NVarChar(10)")]
		public string ISActiveEmp
		{
			get
			{
				return this._ISActiveEmp;
			}
			set
			{
				if ((this._ISActiveEmp != value))
				{
					this._ISActiveEmp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIDEmp", DbType="NVarChar(MAX)")]
		public string CompanyIDEmp
		{
			get
			{
				return this._CompanyIDEmp;
			}
			set
			{
				if ((this._CompanyIDEmp != value))
				{
					this._CompanyIDEmp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this._IDUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(250)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(250)")]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this._Pwd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveUser", DbType="NVarChar(10)")]
		public string IsActiveUser
		{
			get
			{
				return this._IsActiveUser;
			}
			set
			{
				if ((this._IsActiveUser != value))
				{
					this._IsActiveUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIdUser", DbType="NVarChar(MAX)")]
		public string CompanyIdUser
		{
			get
			{
				return this._CompanyIdUser;
			}
			set
			{
				if ((this._CompanyIdUser != value))
				{
					this._CompanyIdUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="Int")]
		public System.Nullable<int> UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this._UserRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLKUserRole", DbType="Int NOT NULL")]
		public int IDLKUserRole
		{
			get
			{
				return this._IDLKUserRole;
			}
			set
			{
				if ((this._IDLKUserRole != value))
				{
					this._IDLKUserRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusRemark", DbType="NVarChar(250)")]
		public string statusRemark
		{
			get
			{
				return this._statusRemark;
			}
			set
			{
				if ((this._statusRemark != value))
				{
					this._statusRemark = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Employe_User")]
	public partial class View_Employe_User1
	{
		
		private int _IDEmp;
		
		private string _EName;
		
		private string _ELName;
		
		private string _ENameAM;
		
		private string _ELNameAM;
		
		private string _JobPosition;
		
		private string _JobPositionAM;
		
		private string _ISActiveEmp;
		
		private string _CompanyIDEmp;
		
		private int _IDUser;
		
		private string _UserName;
		
		private string _Pwd;
		
		private string _IsActiveUser;
		
		private string _CompanyIdUser;
		
		private System.Nullable<int> _UserRole;
		
		private int _IDLKUserRole;
		
		private string _RoleName;
		
		private string _statusRemark;
		
		public View_Employe_User1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmp", DbType="Int NOT NULL")]
		public int IDEmp
		{
			get
			{
				return this._IDEmp;
			}
			set
			{
				if ((this._IDEmp != value))
				{
					this._IDEmp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(250)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this._EName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELName", DbType="NVarChar(250)")]
		public string ELName
		{
			get
			{
				return this._ELName;
			}
			set
			{
				if ((this._ELName != value))
				{
					this._ELName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENameAM", DbType="NVarChar(250)")]
		public string ENameAM
		{
			get
			{
				return this._ENameAM;
			}
			set
			{
				if ((this._ENameAM != value))
				{
					this._ENameAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELNameAM", DbType="NVarChar(250)")]
		public string ELNameAM
		{
			get
			{
				return this._ELNameAM;
			}
			set
			{
				if ((this._ELNameAM != value))
				{
					this._ELNameAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPosition", DbType="NVarChar(250)")]
		public string JobPosition
		{
			get
			{
				return this._JobPosition;
			}
			set
			{
				if ((this._JobPosition != value))
				{
					this._JobPosition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPositionAM", DbType="NVarChar(250)")]
		public string JobPositionAM
		{
			get
			{
				return this._JobPositionAM;
			}
			set
			{
				if ((this._JobPositionAM != value))
				{
					this._JobPositionAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISActiveEmp", DbType="NVarChar(10)")]
		public string ISActiveEmp
		{
			get
			{
				return this._ISActiveEmp;
			}
			set
			{
				if ((this._ISActiveEmp != value))
				{
					this._ISActiveEmp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIDEmp", DbType="NVarChar(MAX)")]
		public string CompanyIDEmp
		{
			get
			{
				return this._CompanyIDEmp;
			}
			set
			{
				if ((this._CompanyIDEmp != value))
				{
					this._CompanyIDEmp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this._IDUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(250)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(250)")]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this._Pwd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveUser", DbType="NVarChar(10)")]
		public string IsActiveUser
		{
			get
			{
				return this._IsActiveUser;
			}
			set
			{
				if ((this._IsActiveUser != value))
				{
					this._IsActiveUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIdUser", DbType="NVarChar(MAX)")]
		public string CompanyIdUser
		{
			get
			{
				return this._CompanyIdUser;
			}
			set
			{
				if ((this._CompanyIdUser != value))
				{
					this._CompanyIdUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="Int")]
		public System.Nullable<int> UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this._UserRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLKUserRole", DbType="Int NOT NULL")]
		public int IDLKUserRole
		{
			get
			{
				return this._IDLKUserRole;
			}
			set
			{
				if ((this._IDLKUserRole != value))
				{
					this._IDLKUserRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusRemark", DbType="NVarChar(250)")]
		public string statusRemark
		{
			get
			{
				return this._statusRemark;
			}
			set
			{
				if ((this._statusRemark != value))
				{
					this._statusRemark = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_LineManager")]
	public partial class Employee_LineManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _employeeID;
		
		private System.Nullable<int> _LineManager;
		
		private System.Nullable<int> _period;
		
		private string _statuss;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Employee> _Employee2;
		
		private EntityRef<Employee> _Employee3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemployeeIDChanging(System.Nullable<int> value);
    partial void OnemployeeIDChanged();
    partial void OnLineManagerChanging(System.Nullable<int> value);
    partial void OnLineManagerChanged();
    partial void OnperiodChanging(System.Nullable<int> value);
    partial void OnperiodChanged();
    partial void OnstatussChanging(string value);
    partial void OnstatussChanged();
    #endregion
		
		public Employee_LineManager()
		{
			this._EvaluationPeriod = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Employee2 = default(EntityRef<Employee>);
			this._Employee3 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int")]
		public System.Nullable<int> employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					if ((this._Employee.HasLoadedOrAssignedValue || this._Employee1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineManager", DbType="Int")]
		public System.Nullable<int> LineManager
		{
			get
			{
				return this._LineManager;
			}
			set
			{
				if ((this._LineManager != value))
				{
					if ((this._Employee2.HasLoadedOrAssignedValue || this._Employee3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineManagerChanging(value);
					this.SendPropertyChanging();
					this._LineManager = value;
					this.SendPropertyChanged("LineManager");
					this.OnLineManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_period", DbType="Int")]
		public System.Nullable<int> period
		{
			get
			{
				return this._period;
			}
			set
			{
				if ((this._period != value))
				{
					if (this._EvaluationPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnperiodChanging(value);
					this.SendPropertyChanging();
					this._period = value;
					this.SendPropertyChanged("period");
					this.OnperiodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statuss", DbType="NVarChar(250)")]
		public string statuss
		{
			get
			{
				return this._statuss;
			}
			set
			{
				if ((this._statuss != value))
				{
					this.OnstatussChanging(value);
					this.SendPropertyChanging();
					this._statuss = value;
					this.SendPropertyChanged("statuss");
					this.OnstatussChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_Employee_LineManager", Storage="_EvaluationPeriod", ThisKey="period", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod.Entity = null;
						previousValue.Employee_LineManagers.Remove(this);
					}
					this._EvaluationPeriod.Entity = value;
					if ((value != null))
					{
						value.Employee_LineManagers.Add(this);
						this._period = value.Id;
					}
					else
					{
						this._period = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager", Storage="_Employee", ThisKey="employeeID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Employee_LineManagers.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Employee_LineManagers.Add(this);
						this._employeeID = value.Id;
					}
					else
					{
						this._employeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager1", Storage="_Employee1", ThisKey="employeeID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employee_LineManagers1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employee_LineManagers1.Add(this);
						this._employeeID = value.Id;
					}
					else
					{
						this._employeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager2", Storage="_Employee2", ThisKey="LineManager", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.Employee_LineManagers2.Remove(this);
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.Employee_LineManagers2.Add(this);
						this._LineManager = value.Id;
					}
					else
					{
						this._LineManager = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager3", Storage="_Employee3", ThisKey="LineManager", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee3
		{
			get
			{
				return this._Employee3.Entity;
			}
			set
			{
				Employee previousValue = this._Employee3.Entity;
				if (((previousValue != value) 
							|| (this._Employee3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee3.Entity = null;
						previousValue.Employee_LineManagers3.Remove(this);
					}
					this._Employee3.Entity = value;
					if ((value != null))
					{
						value.Employee_LineManagers3.Add(this);
						this._LineManager = value.Id;
					}
					else
					{
						this._LineManager = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EmployessList")]
	public partial class View_EmployessList
	{
		
		private int _Id;
		
		private string _FullENName;
		
		private string _ELFullNameEN;
		
		public View_EmployessList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullENName", DbType="NVarChar(MAX)")]
		public string FullENName
		{
			get
			{
				return this._FullENName;
			}
			set
			{
				if ((this._FullENName != value))
				{
					this._FullENName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELFullNameEN", DbType="NVarChar(MAX)")]
		public string ELFullNameEN
		{
			get
			{
				return this._ELFullNameEN;
			}
			set
			{
				if ((this._ELFullNameEN != value))
				{
					this._ELFullNameEN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKEvaluationPoints")]
	public partial class LKEvaluationPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EvaluationName;
		
		private System.Nullable<int> _MaxRate;
		
		private System.Nullable<int> _MinRate;
		
		private string _Status;
		
		private string _Language;
		
		private System.Nullable<int> _DataTypes;
		
		private string _EvaluationNameAmharic;
		
		private EntitySet<EvaluatedPoint> _EvaluatedPoints;
		
		private EntityRef<LKDatatype> _LKDatatype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationNameChanging(string value);
    partial void OnEvaluationNameChanged();
    partial void OnMaxRateChanging(System.Nullable<int> value);
    partial void OnMaxRateChanged();
    partial void OnMinRateChanging(System.Nullable<int> value);
    partial void OnMinRateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnDataTypesChanging(System.Nullable<int> value);
    partial void OnDataTypesChanged();
    partial void OnEvaluationNameAmharicChanging(string value);
    partial void OnEvaluationNameAmharicChanged();
    #endregion
		
		public LKEvaluationPoint()
		{
			this._EvaluatedPoints = new EntitySet<EvaluatedPoint>(new Action<EvaluatedPoint>(this.attach_EvaluatedPoints), new Action<EvaluatedPoint>(this.detach_EvaluatedPoints));
			this._LKDatatype = default(EntityRef<LKDatatype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationName", DbType="NVarChar(250)")]
		public string EvaluationName
		{
			get
			{
				return this._EvaluationName;
			}
			set
			{
				if ((this._EvaluationName != value))
				{
					this.OnEvaluationNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationName = value;
					this.SendPropertyChanged("EvaluationName");
					this.OnEvaluationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRate", DbType="Int")]
		public System.Nullable<int> MaxRate
		{
			get
			{
				return this._MaxRate;
			}
			set
			{
				if ((this._MaxRate != value))
				{
					this.OnMaxRateChanging(value);
					this.SendPropertyChanging();
					this._MaxRate = value;
					this.SendPropertyChanged("MaxRate");
					this.OnMaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Int")]
		public System.Nullable<int> MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(250)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypes", DbType="Int")]
		public System.Nullable<int> DataTypes
		{
			get
			{
				return this._DataTypes;
			}
			set
			{
				if ((this._DataTypes != value))
				{
					if (this._LKDatatype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataTypesChanging(value);
					this.SendPropertyChanging();
					this._DataTypes = value;
					this.SendPropertyChanged("DataTypes");
					this.OnDataTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationNameAmharic", DbType="NVarChar(250)")]
		public string EvaluationNameAmharic
		{
			get
			{
				return this._EvaluationNameAmharic;
			}
			set
			{
				if ((this._EvaluationNameAmharic != value))
				{
					this.OnEvaluationNameAmharicChanging(value);
					this.SendPropertyChanging();
					this._EvaluationNameAmharic = value;
					this.SendPropertyChanged("EvaluationNameAmharic");
					this.OnEvaluationNameAmharicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKEvaluationPoint_EvaluatedPoint", Storage="_EvaluatedPoints", ThisKey="Id", OtherKey="EvaluationPointName")]
		public EntitySet<EvaluatedPoint> EvaluatedPoints
		{
			get
			{
				return this._EvaluatedPoints;
			}
			set
			{
				this._EvaluatedPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKEvaluationPoint", Storage="_LKDatatype", ThisKey="DataTypes", OtherKey="Id", IsForeignKey=true)]
		public LKDatatype LKDatatype
		{
			get
			{
				return this._LKDatatype.Entity;
			}
			set
			{
				LKDatatype previousValue = this._LKDatatype.Entity;
				if (((previousValue != value) 
							|| (this._LKDatatype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKDatatype.Entity = null;
						previousValue.LKEvaluationPoints.Remove(this);
					}
					this._LKDatatype.Entity = value;
					if ((value != null))
					{
						value.LKEvaluationPoints.Add(this);
						this._DataTypes = value.Id;
					}
					else
					{
						this._DataTypes = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKDatatype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluatedPoints(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKEvaluationPoint = this;
		}
		
		private void detach_EvaluatedPoints(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.LKEvaluationPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKSixMonthPlan")]
	public partial class LKSixMonthPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PlanName;
		
		private System.Nullable<int> _DataTypeSelection;
		
		private string _LanguageSelection;
		
		private string _StatusRemark;
		
		private System.Nullable<int> _PreparedByID;
		
		private string _PlanNameAmharic;
		
		private EntitySet<SixMonthPlan> _SixMonthPlans;
		
		private EntityRef<LKDatatype> _LKDatatype;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnDataTypeSelectionChanging(System.Nullable<int> value);
    partial void OnDataTypeSelectionChanged();
    partial void OnLanguageSelectionChanging(string value);
    partial void OnLanguageSelectionChanged();
    partial void OnStatusRemarkChanging(string value);
    partial void OnStatusRemarkChanged();
    partial void OnPreparedByIDChanging(System.Nullable<int> value);
    partial void OnPreparedByIDChanged();
    partial void OnPlanNameAmharicChanging(string value);
    partial void OnPlanNameAmharicChanged();
    #endregion
		
		public LKSixMonthPlan()
		{
			this._SixMonthPlans = new EntitySet<SixMonthPlan>(new Action<SixMonthPlan>(this.attach_SixMonthPlans), new Action<SixMonthPlan>(this.detach_SixMonthPlans));
			this._LKDatatype = default(EntityRef<LKDatatype>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypeSelection", DbType="Int")]
		public System.Nullable<int> DataTypeSelection
		{
			get
			{
				return this._DataTypeSelection;
			}
			set
			{
				if ((this._DataTypeSelection != value))
				{
					if (this._LKDatatype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataTypeSelectionChanging(value);
					this.SendPropertyChanging();
					this._DataTypeSelection = value;
					this.SendPropertyChanged("DataTypeSelection");
					this.OnDataTypeSelectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageSelection", DbType="NVarChar(25)")]
		public string LanguageSelection
		{
			get
			{
				return this._LanguageSelection;
			}
			set
			{
				if ((this._LanguageSelection != value))
				{
					this.OnLanguageSelectionChanging(value);
					this.SendPropertyChanging();
					this._LanguageSelection = value;
					this.SendPropertyChanged("LanguageSelection");
					this.OnLanguageSelectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusRemark", DbType="NVarChar(MAX)")]
		public string StatusRemark
		{
			get
			{
				return this._StatusRemark;
			}
			set
			{
				if ((this._StatusRemark != value))
				{
					this.OnStatusRemarkChanging(value);
					this.SendPropertyChanging();
					this._StatusRemark = value;
					this.SendPropertyChanged("StatusRemark");
					this.OnStatusRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByID", DbType="Int")]
		public System.Nullable<int> PreparedByID
		{
			get
			{
				return this._PreparedByID;
			}
			set
			{
				if ((this._PreparedByID != value))
				{
					if ((this._Employee.HasLoadedOrAssignedValue || this._Employee1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIDChanging(value);
					this.SendPropertyChanging();
					this._PreparedByID = value;
					this.SendPropertyChanged("PreparedByID");
					this.OnPreparedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanNameAmharic", DbType="NVarChar(MAX)")]
		public string PlanNameAmharic
		{
			get
			{
				return this._PlanNameAmharic;
			}
			set
			{
				if ((this._PlanNameAmharic != value))
				{
					this.OnPlanNameAmharicChanging(value);
					this.SendPropertyChanging();
					this._PlanNameAmharic = value;
					this.SendPropertyChanged("PlanNameAmharic");
					this.OnPlanNameAmharicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKSixMonthPlan_SixMonthPlan", Storage="_SixMonthPlans", ThisKey="Id", OtherKey="PlanName")]
		public EntitySet<SixMonthPlan> SixMonthPlans
		{
			get
			{
				return this._SixMonthPlans;
			}
			set
			{
				this._SixMonthPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKSixMonthPlan", Storage="_LKDatatype", ThisKey="DataTypeSelection", OtherKey="Id", IsForeignKey=true)]
		public LKDatatype LKDatatype
		{
			get
			{
				return this._LKDatatype.Entity;
			}
			set
			{
				LKDatatype previousValue = this._LKDatatype.Entity;
				if (((previousValue != value) 
							|| (this._LKDatatype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKDatatype.Entity = null;
						previousValue.LKSixMonthPlans.Remove(this);
					}
					this._LKDatatype.Entity = value;
					if ((value != null))
					{
						value.LKSixMonthPlans.Add(this);
						this._DataTypeSelection = value.Id;
					}
					else
					{
						this._DataTypeSelection = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKDatatype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LKSixMonthPlan", Storage="_Employee", ThisKey="PreparedByID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.LKSixMonthPlans.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.LKSixMonthPlans.Add(this);
						this._PreparedByID = value.Id;
					}
					else
					{
						this._PreparedByID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LKSixMonthPlan1", Storage="_Employee1", ThisKey="PreparedByID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.LKSixMonthPlans1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.LKSixMonthPlans1.Add(this);
						this._PreparedByID = value.Id;
					}
					else
					{
						this._PreparedByID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SixMonthPlans(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.LKSixMonthPlan = this;
		}
		
		private void detach_SixMonthPlans(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.LKSixMonthPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluatedPoints")]
	public partial class EvaluatedPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _EvaluatorId;
		
		private System.Nullable<int> _EvaluationPointName;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private string _EvaluationPointGiven;
		
		private System.Nullable<System.DateTime> _evaluationDate;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private EntityRef<LKEvaluationPoint> _LKEvaluationPoint;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Employee> _Employee2;
		
		private EntityRef<Employee> _Employee3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEvaluatorIdChanging(System.Nullable<int> value);
    partial void OnEvaluatorIdChanged();
    partial void OnEvaluationPointNameChanging(System.Nullable<int> value);
    partial void OnEvaluationPointNameChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluationPointGivenChanging(string value);
    partial void OnEvaluationPointGivenChanged();
    partial void OnevaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnevaluationDateChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    #endregion
		
		public EvaluatedPoint()
		{
			this._LKEvaluationPoint = default(EntityRef<LKEvaluationPoint>);
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Employee2 = default(EntityRef<Employee>);
			this._Employee3 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if ((this._Employee.HasLoadedOrAssignedValue || this._Employee1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorId", DbType="Int")]
		public System.Nullable<int> EvaluatorId
		{
			get
			{
				return this._EvaluatorId;
			}
			set
			{
				if ((this._EvaluatorId != value))
				{
					if ((this._Employee2.HasLoadedOrAssignedValue || this._Employee3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorId = value;
					this.SendPropertyChanged("EvaluatorId");
					this.OnEvaluatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointName", DbType="Int")]
		public System.Nullable<int> EvaluationPointName
		{
			get
			{
				return this._EvaluationPointName;
			}
			set
			{
				if ((this._EvaluationPointName != value))
				{
					if (this._LKEvaluationPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPointNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointName = value;
					this.SendPropertyChanged("EvaluationPointName");
					this.OnEvaluationPointNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointGiven", DbType="NVarChar(MAX)")]
		public string EvaluationPointGiven
		{
			get
			{
				return this._EvaluationPointGiven;
			}
			set
			{
				if ((this._EvaluationPointGiven != value))
				{
					this.OnEvaluationPointGivenChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointGiven = value;
					this.SendPropertyChanged("EvaluationPointGiven");
					this.OnEvaluationPointGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evaluationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> evaluationDate
		{
			get
			{
				return this._evaluationDate;
			}
			set
			{
				if ((this._evaluationDate != value))
				{
					this.OnevaluationDateChanging(value);
					this.SendPropertyChanging();
					this._evaluationDate = value;
					this.SendPropertyChanged("evaluationDate");
					this.OnevaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKEvaluationPoint_EvaluatedPoint", Storage="_LKEvaluationPoint", ThisKey="EvaluationPointName", OtherKey="Id", IsForeignKey=true)]
		public LKEvaluationPoint LKEvaluationPoint
		{
			get
			{
				return this._LKEvaluationPoint.Entity;
			}
			set
			{
				LKEvaluationPoint previousValue = this._LKEvaluationPoint.Entity;
				if (((previousValue != value) 
							|| (this._LKEvaluationPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKEvaluationPoint.Entity = null;
						previousValue.EvaluatedPoints.Remove(this);
					}
					this._LKEvaluationPoint.Entity = value;
					if ((value != null))
					{
						value.EvaluatedPoints.Add(this);
						this._EvaluationPointName = value.Id;
					}
					else
					{
						this._EvaluationPointName = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKEvaluationPoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EvaluatedPoint", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.EvaluatedPoints.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.EvaluatedPoints.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EvaluatedPoints.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EvaluatedPoints.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint1", Storage="_Employee1", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.EvaluatedPoints1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.EvaluatedPoints1.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint2", Storage="_Employee2", ThisKey="EvaluatorId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.EvaluatedPoints2.Remove(this);
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.EvaluatedPoints2.Add(this);
						this._EvaluatorId = value.Id;
					}
					else
					{
						this._EvaluatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint3", Storage="_Employee3", ThisKey="EvaluatorId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee3
		{
			get
			{
				return this._Employee3.Entity;
			}
			set
			{
				Employee previousValue = this._Employee3.Entity;
				if (((previousValue != value) 
							|| (this._Employee3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee3.Entity = null;
						previousValue.EvaluatedPoints3.Remove(this);
					}
					this._Employee3.Entity = value;
					if ((value != null))
					{
						value.EvaluatedPoints3.Add(this);
						this._EvaluatorId = value.Id;
					}
					else
					{
						this._EvaluatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SixMonthPlan")]
	public partial class SixMonthPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PlanSetByEmployeeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private int _PlanName;
		
		private string _PriorityGiven;
		
		private System.Nullable<System.DateTime> _DatePlanned;
		
		private string _StatusRemark;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private System.Nullable<int> _PlanSetForEmployeeId;
		
		private string _UserRemark;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<LKSixMonthPlan> _LKSixMonthPlan;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Employee> _Employee2;
		
		private EntityRef<Employee> _Employee3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlanSetByEmployeeIdChanging(System.Nullable<int> value);
    partial void OnPlanSetByEmployeeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnPlanNameChanging(int value);
    partial void OnPlanNameChanged();
    partial void OnPriorityGivenChanging(string value);
    partial void OnPriorityGivenChanged();
    partial void OnDatePlannedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePlannedChanged();
    partial void OnStatusRemarkChanging(string value);
    partial void OnStatusRemarkChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    partial void OnPlanSetForEmployeeIdChanging(System.Nullable<int> value);
    partial void OnPlanSetForEmployeeIdChanged();
    partial void OnUserRemarkChanging(string value);
    partial void OnUserRemarkChanged();
    #endregion
		
		public SixMonthPlan()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._LKSixMonthPlan = default(EntityRef<LKSixMonthPlan>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Employee2 = default(EntityRef<Employee>);
			this._Employee3 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanSetByEmployeeId", DbType="Int")]
		public System.Nullable<int> PlanSetByEmployeeId
		{
			get
			{
				return this._PlanSetByEmployeeId;
			}
			set
			{
				if ((this._PlanSetByEmployeeId != value))
				{
					if ((this._Employee.HasLoadedOrAssignedValue || this._Employee2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanSetByEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._PlanSetByEmployeeId = value;
					this.SendPropertyChanged("PlanSetByEmployeeId");
					this.OnPlanSetByEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="Int NOT NULL")]
		public int PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					if (this._LKSixMonthPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityGiven", DbType="NVarChar(MAX)")]
		public string PriorityGiven
		{
			get
			{
				return this._PriorityGiven;
			}
			set
			{
				if ((this._PriorityGiven != value))
				{
					this.OnPriorityGivenChanging(value);
					this.SendPropertyChanging();
					this._PriorityGiven = value;
					this.SendPropertyChanged("PriorityGiven");
					this.OnPriorityGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePlanned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePlanned
		{
			get
			{
				return this._DatePlanned;
			}
			set
			{
				if ((this._DatePlanned != value))
				{
					this.OnDatePlannedChanging(value);
					this.SendPropertyChanging();
					this._DatePlanned = value;
					this.SendPropertyChanged("DatePlanned");
					this.OnDatePlannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusRemark", DbType="NVarChar(MAX)")]
		public string StatusRemark
		{
			get
			{
				return this._StatusRemark;
			}
			set
			{
				if ((this._StatusRemark != value))
				{
					this.OnStatusRemarkChanging(value);
					this.SendPropertyChanging();
					this._StatusRemark = value;
					this.SendPropertyChanged("StatusRemark");
					this.OnStatusRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanSetForEmployeeId", DbType="Int")]
		public System.Nullable<int> PlanSetForEmployeeId
		{
			get
			{
				return this._PlanSetForEmployeeId;
			}
			set
			{
				if ((this._PlanSetForEmployeeId != value))
				{
					if ((this._Employee1.HasLoadedOrAssignedValue || this._Employee3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanSetForEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._PlanSetForEmployeeId = value;
					this.SendPropertyChanged("PlanSetForEmployeeId");
					this.OnPlanSetForEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRemark", DbType="NVarChar(MAX)")]
		public string UserRemark
		{
			get
			{
				return this._UserRemark;
			}
			set
			{
				if ((this._UserRemark != value))
				{
					this.OnUserRemarkChanging(value);
					this.SendPropertyChanging();
					this._UserRemark = value;
					this.SendPropertyChanged("UserRemark");
					this.OnUserRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_SixMonthPlan", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.SixMonthPlans.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.SixMonthPlans.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKSixMonthPlan_SixMonthPlan", Storage="_LKSixMonthPlan", ThisKey="PlanName", OtherKey="Id", IsForeignKey=true)]
		public LKSixMonthPlan LKSixMonthPlan
		{
			get
			{
				return this._LKSixMonthPlan.Entity;
			}
			set
			{
				LKSixMonthPlan previousValue = this._LKSixMonthPlan.Entity;
				if (((previousValue != value) 
							|| (this._LKSixMonthPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKSixMonthPlan.Entity = null;
						previousValue.SixMonthPlans.Remove(this);
					}
					this._LKSixMonthPlan.Entity = value;
					if ((value != null))
					{
						value.SixMonthPlans.Add(this);
						this._PlanName = value.Id;
					}
					else
					{
						this._PlanName = default(int);
					}
					this.SendPropertyChanged("LKSixMonthPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan", Storage="_Employee", ThisKey="PlanSetByEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.SixMonthPlans.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.SixMonthPlans.Add(this);
						this._PlanSetByEmployeeId = value.Id;
					}
					else
					{
						this._PlanSetByEmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan1", Storage="_Employee1", ThisKey="PlanSetForEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.SixMonthPlans1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.SixMonthPlans1.Add(this);
						this._PlanSetForEmployeeId = value.Id;
					}
					else
					{
						this._PlanSetForEmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan2", Storage="_Employee2", ThisKey="PlanSetByEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.SixMonthPlans2.Remove(this);
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.SixMonthPlans2.Add(this);
						this._PlanSetByEmployeeId = value.Id;
					}
					else
					{
						this._PlanSetByEmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan3", Storage="_Employee3", ThisKey="PlanSetForEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee3
		{
			get
			{
				return this._Employee3.Entity;
			}
			set
			{
				Employee previousValue = this._Employee3.Entity;
				if (((previousValue != value) 
							|| (this._Employee3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee3.Entity = null;
						previousValue.SixMonthPlans3.Remove(this);
					}
					this._Employee3.Entity = value;
					if ((value != null))
					{
						value.SixMonthPlans3.Add(this);
						this._PlanSetForEmployeeId = value.Id;
					}
					else
					{
						this._PlanSetForEmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkPlanforNextYear")]
	public partial class WorkPlanforNextYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private string _SmartObjective;
		
		private string _ActionPlan;
		
		private string _EndResult;
		
		private System.Nullable<System.DateTime> _TimeFrameStart;
		
		private System.Nullable<System.DateTime> _TimeFrameEnd;
		
		private System.Nullable<int> _EvaluationPlanPeriod;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnSmartObjectiveChanging(string value);
    partial void OnSmartObjectiveChanged();
    partial void OnActionPlanChanging(string value);
    partial void OnActionPlanChanged();
    partial void OnEndResultChanging(string value);
    partial void OnEndResultChanged();
    partial void OnTimeFrameStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeFrameStartChanged();
    partial void OnTimeFrameEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeFrameEndChanged();
    partial void OnEvaluationPlanPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPlanPeriodChanged();
    #endregion
		
		public WorkPlanforNextYear()
		{
			this._EvaluationPeriod = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartObjective", DbType="NVarChar(MAX)")]
		public string SmartObjective
		{
			get
			{
				return this._SmartObjective;
			}
			set
			{
				if ((this._SmartObjective != value))
				{
					this.OnSmartObjectiveChanging(value);
					this.SendPropertyChanging();
					this._SmartObjective = value;
					this.SendPropertyChanged("SmartObjective");
					this.OnSmartObjectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPlan", DbType="NVarChar(MAX)")]
		public string ActionPlan
		{
			get
			{
				return this._ActionPlan;
			}
			set
			{
				if ((this._ActionPlan != value))
				{
					this.OnActionPlanChanging(value);
					this.SendPropertyChanging();
					this._ActionPlan = value;
					this.SendPropertyChanged("ActionPlan");
					this.OnActionPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndResult", DbType="NVarChar(MAX)")]
		public string EndResult
		{
			get
			{
				return this._EndResult;
			}
			set
			{
				if ((this._EndResult != value))
				{
					this.OnEndResultChanging(value);
					this.SendPropertyChanging();
					this._EndResult = value;
					this.SendPropertyChanged("EndResult");
					this.OnEndResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrameStart", DbType="Date")]
		public System.Nullable<System.DateTime> TimeFrameStart
		{
			get
			{
				return this._TimeFrameStart;
			}
			set
			{
				if ((this._TimeFrameStart != value))
				{
					this.OnTimeFrameStartChanging(value);
					this.SendPropertyChanging();
					this._TimeFrameStart = value;
					this.SendPropertyChanged("TimeFrameStart");
					this.OnTimeFrameStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrameEnd", DbType="Date")]
		public System.Nullable<System.DateTime> TimeFrameEnd
		{
			get
			{
				return this._TimeFrameEnd;
			}
			set
			{
				if ((this._TimeFrameEnd != value))
				{
					this.OnTimeFrameEndChanging(value);
					this.SendPropertyChanging();
					this._TimeFrameEnd = value;
					this.SendPropertyChanged("TimeFrameEnd");
					this.OnTimeFrameEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPlanPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPlanPeriod
		{
			get
			{
				return this._EvaluationPlanPeriod;
			}
			set
			{
				if ((this._EvaluationPlanPeriod != value))
				{
					if (this._EvaluationPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPlanPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPlanPeriod = value;
					this.SendPropertyChanged("EvaluationPlanPeriod");
					this.OnEvaluationPlanPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_WorkPlanforNextYear", Storage="_EvaluationPeriod", ThisKey="EvaluationPlanPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod.Entity = null;
						previousValue.WorkPlanforNextYears.Remove(this);
					}
					this._EvaluationPeriod.Entity = value;
					if ((value != null))
					{
						value.WorkPlanforNextYears.Add(this);
						this._EvaluationPlanPeriod = value.Id;
					}
					else
					{
						this._EvaluationPlanPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_WorkPlanforNextYear", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.WorkPlanforNextYears.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.WorkPlanforNextYears.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnualColleagueEvaluations")]
	public partial class AnnualColleagueEvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _EvaluatorColleagueId;
		
		private System.Nullable<int> _EvaluationPointName;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private string _EvaluationPointGiven;
		
		private System.Nullable<System.DateTime> _EavluationDate;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<LKColleagueFeedBAckPoint> _LKColleagueFeedBAckPoint;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEvaluatorColleagueIdChanging(System.Nullable<int> value);
    partial void OnEvaluatorColleagueIdChanged();
    partial void OnEvaluationPointNameChanging(System.Nullable<int> value);
    partial void OnEvaluationPointNameChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluationPointGivenChanging(string value);
    partial void OnEvaluationPointGivenChanged();
    partial void OnEavluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEavluationDateChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    #endregion
		
		public AnnualColleagueEvaluation()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._LKColleagueFeedBAckPoint = default(EntityRef<LKColleagueFeedBAckPoint>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorColleagueId", DbType="Int")]
		public System.Nullable<int> EvaluatorColleagueId
		{
			get
			{
				return this._EvaluatorColleagueId;
			}
			set
			{
				if ((this._EvaluatorColleagueId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorColleagueIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorColleagueId = value;
					this.SendPropertyChanged("EvaluatorColleagueId");
					this.OnEvaluatorColleagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointName", DbType="Int")]
		public System.Nullable<int> EvaluationPointName
		{
			get
			{
				return this._EvaluationPointName;
			}
			set
			{
				if ((this._EvaluationPointName != value))
				{
					if (this._LKColleagueFeedBAckPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPointNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointName = value;
					this.SendPropertyChanged("EvaluationPointName");
					this.OnEvaluationPointNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointGiven", DbType="NVarChar(MAX)")]
		public string EvaluationPointGiven
		{
			get
			{
				return this._EvaluationPointGiven;
			}
			set
			{
				if ((this._EvaluationPointGiven != value))
				{
					this.OnEvaluationPointGivenChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointGiven = value;
					this.SendPropertyChanged("EvaluationPointGiven");
					this.OnEvaluationPointGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EavluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EavluationDate
		{
			get
			{
				return this._EavluationDate;
			}
			set
			{
				if ((this._EavluationDate != value))
				{
					this.OnEavluationDateChanging(value);
					this.SendPropertyChanging();
					this._EavluationDate = value;
					this.SendPropertyChanged("EavluationDate");
					this.OnEavluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualColleagueEvaluation", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AnnualColleagueEvaluations.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AnnualColleagueEvaluations.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKColleagueFeedBAckPoint_AnnualColleagueEvaluation", Storage="_LKColleagueFeedBAckPoint", ThisKey="EvaluationPointName", OtherKey="Id", IsForeignKey=true)]
		public LKColleagueFeedBAckPoint LKColleagueFeedBAckPoint
		{
			get
			{
				return this._LKColleagueFeedBAckPoint.Entity;
			}
			set
			{
				LKColleagueFeedBAckPoint previousValue = this._LKColleagueFeedBAckPoint.Entity;
				if (((previousValue != value) 
							|| (this._LKColleagueFeedBAckPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKColleagueFeedBAckPoint.Entity = null;
						previousValue.AnnualColleagueEvaluations.Remove(this);
					}
					this._LKColleagueFeedBAckPoint.Entity = value;
					if ((value != null))
					{
						value.AnnualColleagueEvaluations.Add(this);
						this._EvaluationPointName = value.Id;
					}
					else
					{
						this._EvaluationPointName = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKColleagueFeedBAckPoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualColleagueEvaluation", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AnnualColleagueEvaluations.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AnnualColleagueEvaluations.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualColleagueEvaluation1", Storage="_Employee1", ThisKey="EvaluatorColleagueId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.AnnualColleagueEvaluations1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.AnnualColleagueEvaluations1.Add(this);
						this._EvaluatorColleagueId = value.Id;
					}
					else
					{
						this._EvaluatorColleagueId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKColleagueFeedBAckPoints")]
	public partial class LKColleagueFeedBAckPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EvaluationName;
		
		private string _EvaluationNameAmharic;
		
		private System.Nullable<int> _MaxRate;
		
		private System.Nullable<int> _MinRate;
		
		private string _status;
		
		private System.Nullable<int> _DataType;
		
		private EntitySet<AnnualColleagueEvaluation> _AnnualColleagueEvaluations;
		
		private EntityRef<LKDatatype> _LKDatatype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationNameChanging(string value);
    partial void OnEvaluationNameChanged();
    partial void OnEvaluationNameAmharicChanging(string value);
    partial void OnEvaluationNameAmharicChanged();
    partial void OnMaxRateChanging(System.Nullable<int> value);
    partial void OnMaxRateChanged();
    partial void OnMinRateChanging(System.Nullable<int> value);
    partial void OnMinRateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnDataTypeChanging(System.Nullable<int> value);
    partial void OnDataTypeChanged();
    #endregion
		
		public LKColleagueFeedBAckPoint()
		{
			this._AnnualColleagueEvaluations = new EntitySet<AnnualColleagueEvaluation>(new Action<AnnualColleagueEvaluation>(this.attach_AnnualColleagueEvaluations), new Action<AnnualColleagueEvaluation>(this.detach_AnnualColleagueEvaluations));
			this._LKDatatype = default(EntityRef<LKDatatype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationName", DbType="NVarChar(250)")]
		public string EvaluationName
		{
			get
			{
				return this._EvaluationName;
			}
			set
			{
				if ((this._EvaluationName != value))
				{
					this.OnEvaluationNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationName = value;
					this.SendPropertyChanged("EvaluationName");
					this.OnEvaluationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationNameAmharic", DbType="NVarChar(250)")]
		public string EvaluationNameAmharic
		{
			get
			{
				return this._EvaluationNameAmharic;
			}
			set
			{
				if ((this._EvaluationNameAmharic != value))
				{
					this.OnEvaluationNameAmharicChanging(value);
					this.SendPropertyChanging();
					this._EvaluationNameAmharic = value;
					this.SendPropertyChanged("EvaluationNameAmharic");
					this.OnEvaluationNameAmharicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRate", DbType="Int")]
		public System.Nullable<int> MaxRate
		{
			get
			{
				return this._MaxRate;
			}
			set
			{
				if ((this._MaxRate != value))
				{
					this.OnMaxRateChanging(value);
					this.SendPropertyChanging();
					this._MaxRate = value;
					this.SendPropertyChanged("MaxRate");
					this.OnMaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Int")]
		public System.Nullable<int> MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(250)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int")]
		public System.Nullable<int> DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					if (this._LKDatatype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKColleagueFeedBAckPoint_AnnualColleagueEvaluation", Storage="_AnnualColleagueEvaluations", ThisKey="Id", OtherKey="EvaluationPointName")]
		public EntitySet<AnnualColleagueEvaluation> AnnualColleagueEvaluations
		{
			get
			{
				return this._AnnualColleagueEvaluations;
			}
			set
			{
				this._AnnualColleagueEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKColleagueFeedBAckPoint", Storage="_LKDatatype", ThisKey="DataType", OtherKey="Id", IsForeignKey=true)]
		public LKDatatype LKDatatype
		{
			get
			{
				return this._LKDatatype.Entity;
			}
			set
			{
				LKDatatype previousValue = this._LKDatatype.Entity;
				if (((previousValue != value) 
							|| (this._LKDatatype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKDatatype.Entity = null;
						previousValue.LKColleagueFeedBAckPoints.Remove(this);
					}
					this._LKDatatype.Entity = value;
					if ((value != null))
					{
						value.LKColleagueFeedBAckPoints.Add(this);
						this._DataType = value.Id;
					}
					else
					{
						this._DataType = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKDatatype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnnualColleagueEvaluations(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKColleagueFeedBAckPoint = this;
		}
		
		private void detach_AnnualColleagueEvaluations(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKColleagueFeedBAckPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnualLineManagerEvaluations")]
	public partial class AnnualLineManagerEvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _EvaluatorLineMgrId;
		
		private System.Nullable<int> _EvaluationPointName;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private string _EvaluationPointGiven;
		
		private System.Nullable<System.DateTime> _EvaluatinDate;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<LKLineMgrFeedBAckPoint> _LKLineMgrFeedBAckPoint;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEvaluatorLineMgrIdChanging(System.Nullable<int> value);
    partial void OnEvaluatorLineMgrIdChanged();
    partial void OnEvaluationPointNameChanging(System.Nullable<int> value);
    partial void OnEvaluationPointNameChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluationPointGivenChanging(string value);
    partial void OnEvaluationPointGivenChanged();
    partial void OnEvaluatinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluatinDateChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    #endregion
		
		public AnnualLineManagerEvaluation()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._LKLineMgrFeedBAckPoint = default(EntityRef<LKLineMgrFeedBAckPoint>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorLineMgrId", DbType="Int")]
		public System.Nullable<int> EvaluatorLineMgrId
		{
			get
			{
				return this._EvaluatorLineMgrId;
			}
			set
			{
				if ((this._EvaluatorLineMgrId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorLineMgrIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorLineMgrId = value;
					this.SendPropertyChanged("EvaluatorLineMgrId");
					this.OnEvaluatorLineMgrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointName", DbType="Int")]
		public System.Nullable<int> EvaluationPointName
		{
			get
			{
				return this._EvaluationPointName;
			}
			set
			{
				if ((this._EvaluationPointName != value))
				{
					if (this._LKLineMgrFeedBAckPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPointNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointName = value;
					this.SendPropertyChanged("EvaluationPointName");
					this.OnEvaluationPointNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointGiven", DbType="NVarChar(MAX)")]
		public string EvaluationPointGiven
		{
			get
			{
				return this._EvaluationPointGiven;
			}
			set
			{
				if ((this._EvaluationPointGiven != value))
				{
					this.OnEvaluationPointGivenChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointGiven = value;
					this.SendPropertyChanged("EvaluationPointGiven");
					this.OnEvaluationPointGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatinDate", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluatinDate
		{
			get
			{
				return this._EvaluatinDate;
			}
			set
			{
				if ((this._EvaluatinDate != value))
				{
					this.OnEvaluatinDateChanging(value);
					this.SendPropertyChanging();
					this._EvaluatinDate = value;
					this.SendPropertyChanged("EvaluatinDate");
					this.OnEvaluatinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualLineManagerEvaluation", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AnnualLineManagerEvaluations.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AnnualLineManagerEvaluations.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKLineMgrFeedBAckPoint_AnnualLineManagerEvaluation", Storage="_LKLineMgrFeedBAckPoint", ThisKey="EvaluationPointName", OtherKey="Id", IsForeignKey=true)]
		public LKLineMgrFeedBAckPoint LKLineMgrFeedBAckPoint
		{
			get
			{
				return this._LKLineMgrFeedBAckPoint.Entity;
			}
			set
			{
				LKLineMgrFeedBAckPoint previousValue = this._LKLineMgrFeedBAckPoint.Entity;
				if (((previousValue != value) 
							|| (this._LKLineMgrFeedBAckPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKLineMgrFeedBAckPoint.Entity = null;
						previousValue.AnnualLineManagerEvaluations.Remove(this);
					}
					this._LKLineMgrFeedBAckPoint.Entity = value;
					if ((value != null))
					{
						value.AnnualLineManagerEvaluations.Add(this);
						this._EvaluationPointName = value.Id;
					}
					else
					{
						this._EvaluationPointName = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKLineMgrFeedBAckPoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualLineManagerEvaluation", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AnnualLineManagerEvaluations.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AnnualLineManagerEvaluations.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualLineManagerEvaluation1", Storage="_Employee1", ThisKey="EvaluatorLineMgrId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.AnnualLineManagerEvaluations1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.AnnualLineManagerEvaluations1.Add(this);
						this._EvaluatorLineMgrId = value.Id;
					}
					else
					{
						this._EvaluatorLineMgrId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKLineMgrFeedBAckPoint")]
	public partial class LKLineMgrFeedBAckPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EvaluationName;
		
		private string _EvaluationNameAmharic;
		
		private System.Nullable<int> _MaxRate;
		
		private System.Nullable<int> _MinRate;
		
		private string _Statuss;
		
		private System.Nullable<int> _DataTypes;
		
		private EntitySet<AnnualLineManagerEvaluation> _AnnualLineManagerEvaluations;
		
		private EntityRef<LKDatatype> _LKDatatype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationNameChanging(string value);
    partial void OnEvaluationNameChanged();
    partial void OnEvaluationNameAmharicChanging(string value);
    partial void OnEvaluationNameAmharicChanged();
    partial void OnMaxRateChanging(System.Nullable<int> value);
    partial void OnMaxRateChanged();
    partial void OnMinRateChanging(System.Nullable<int> value);
    partial void OnMinRateChanged();
    partial void OnStatussChanging(string value);
    partial void OnStatussChanged();
    partial void OnDataTypesChanging(System.Nullable<int> value);
    partial void OnDataTypesChanged();
    #endregion
		
		public LKLineMgrFeedBAckPoint()
		{
			this._AnnualLineManagerEvaluations = new EntitySet<AnnualLineManagerEvaluation>(new Action<AnnualLineManagerEvaluation>(this.attach_AnnualLineManagerEvaluations), new Action<AnnualLineManagerEvaluation>(this.detach_AnnualLineManagerEvaluations));
			this._LKDatatype = default(EntityRef<LKDatatype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationName", DbType="NVarChar(MAX)")]
		public string EvaluationName
		{
			get
			{
				return this._EvaluationName;
			}
			set
			{
				if ((this._EvaluationName != value))
				{
					this.OnEvaluationNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationName = value;
					this.SendPropertyChanged("EvaluationName");
					this.OnEvaluationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationNameAmharic", DbType="NVarChar(MAX)")]
		public string EvaluationNameAmharic
		{
			get
			{
				return this._EvaluationNameAmharic;
			}
			set
			{
				if ((this._EvaluationNameAmharic != value))
				{
					this.OnEvaluationNameAmharicChanging(value);
					this.SendPropertyChanging();
					this._EvaluationNameAmharic = value;
					this.SendPropertyChanged("EvaluationNameAmharic");
					this.OnEvaluationNameAmharicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRate", DbType="Int")]
		public System.Nullable<int> MaxRate
		{
			get
			{
				return this._MaxRate;
			}
			set
			{
				if ((this._MaxRate != value))
				{
					this.OnMaxRateChanging(value);
					this.SendPropertyChanging();
					this._MaxRate = value;
					this.SendPropertyChanged("MaxRate");
					this.OnMaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Int")]
		public System.Nullable<int> MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statuss", DbType="NVarChar(MAX)")]
		public string Statuss
		{
			get
			{
				return this._Statuss;
			}
			set
			{
				if ((this._Statuss != value))
				{
					this.OnStatussChanging(value);
					this.SendPropertyChanging();
					this._Statuss = value;
					this.SendPropertyChanged("Statuss");
					this.OnStatussChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypes", DbType="Int")]
		public System.Nullable<int> DataTypes
		{
			get
			{
				return this._DataTypes;
			}
			set
			{
				if ((this._DataTypes != value))
				{
					if (this._LKDatatype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataTypesChanging(value);
					this.SendPropertyChanging();
					this._DataTypes = value;
					this.SendPropertyChanged("DataTypes");
					this.OnDataTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKLineMgrFeedBAckPoint_AnnualLineManagerEvaluation", Storage="_AnnualLineManagerEvaluations", ThisKey="Id", OtherKey="EvaluationPointName")]
		public EntitySet<AnnualLineManagerEvaluation> AnnualLineManagerEvaluations
		{
			get
			{
				return this._AnnualLineManagerEvaluations;
			}
			set
			{
				this._AnnualLineManagerEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKLineMgrFeedBAckPoint", Storage="_LKDatatype", ThisKey="DataTypes", OtherKey="Id", IsForeignKey=true)]
		public LKDatatype LKDatatype
		{
			get
			{
				return this._LKDatatype.Entity;
			}
			set
			{
				LKDatatype previousValue = this._LKDatatype.Entity;
				if (((previousValue != value) 
							|| (this._LKDatatype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKDatatype.Entity = null;
						previousValue.LKLineMgrFeedBAckPoints.Remove(this);
					}
					this._LKDatatype.Entity = value;
					if ((value != null))
					{
						value.LKLineMgrFeedBAckPoints.Add(this);
						this._DataTypes = value.Id;
					}
					else
					{
						this._DataTypes = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKDatatype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnnualLineManagerEvaluations(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKLineMgrFeedBAckPoint = this;
		}
		
		private void detach_AnnualLineManagerEvaluations(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKLineMgrFeedBAckPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_employe_EvaluatorCollueage")]
	public partial class View_employe_EvaluatorCollueage
	{
		
		private string _EvaluatorFullName;
		
		private int _Id;
		
		private System.Nullable<int> _period;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _EvaluatorColleague;
		
		private string _EmployeeFullName;
		
		public View_employe_EvaluatorCollueage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorFullName", DbType="NVarChar(501)")]
		public string EvaluatorFullName
		{
			get
			{
				return this._EvaluatorFullName;
			}
			set
			{
				if ((this._EvaluatorFullName != value))
				{
					this._EvaluatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_period", DbType="Int")]
		public System.Nullable<int> period
		{
			get
			{
				return this._period;
			}
			set
			{
				if ((this._period != value))
				{
					this._period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorColleague", DbType="Int")]
		public System.Nullable<int> EvaluatorColleague
		{
			get
			{
				return this._EvaluatorColleague;
			}
			set
			{
				if ((this._EvaluatorColleague != value))
				{
					this._EvaluatorColleague = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeFullName", DbType="NVarChar(501)")]
		public string EmployeeFullName
		{
			get
			{
				return this._EmployeeFullName;
			}
			set
			{
				if ((this._EmployeeFullName != value))
				{
					this._EmployeeFullName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaOfAchievement")]
	public partial class AreaOfAchievement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private System.Nullable<System.DateTime> _EvaluationDate;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private string _DirectJobRelated;
		
		private string _NumberOfAssignmentsByMySelf;
		
		private string _NumberOfAssignmentsHandledTogether;
		
		private string _NumberOfAssignmentsWithKPI;
		
		private string _Remark;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnEvaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationDateChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnDirectJobRelatedChanging(string value);
    partial void OnDirectJobRelatedChanged();
    partial void OnNumberOfAssignmentsByMySelfChanging(string value);
    partial void OnNumberOfAssignmentsByMySelfChanged();
    partial void OnNumberOfAssignmentsHandledTogetherChanging(string value);
    partial void OnNumberOfAssignmentsHandledTogetherChanged();
    partial void OnNumberOfAssignmentsWithKPIChanging(string value);
    partial void OnNumberOfAssignmentsWithKPIChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public AreaOfAchievement()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluationDate
		{
			get
			{
				return this._EvaluationDate;
			}
			set
			{
				if ((this._EvaluationDate != value))
				{
					this.OnEvaluationDateChanging(value);
					this.SendPropertyChanging();
					this._EvaluationDate = value;
					this.SendPropertyChanged("EvaluationDate");
					this.OnEvaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectJobRelated", DbType="NVarChar(MAX)")]
		public string DirectJobRelated
		{
			get
			{
				return this._DirectJobRelated;
			}
			set
			{
				if ((this._DirectJobRelated != value))
				{
					this.OnDirectJobRelatedChanging(value);
					this.SendPropertyChanging();
					this._DirectJobRelated = value;
					this.SendPropertyChanged("DirectJobRelated");
					this.OnDirectJobRelatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAssignmentsByMySelf", DbType="NVarChar(MAX)")]
		public string NumberOfAssignmentsByMySelf
		{
			get
			{
				return this._NumberOfAssignmentsByMySelf;
			}
			set
			{
				if ((this._NumberOfAssignmentsByMySelf != value))
				{
					this.OnNumberOfAssignmentsByMySelfChanging(value);
					this.SendPropertyChanging();
					this._NumberOfAssignmentsByMySelf = value;
					this.SendPropertyChanged("NumberOfAssignmentsByMySelf");
					this.OnNumberOfAssignmentsByMySelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAssignmentsHandledTogether", DbType="NVarChar(MAX)")]
		public string NumberOfAssignmentsHandledTogether
		{
			get
			{
				return this._NumberOfAssignmentsHandledTogether;
			}
			set
			{
				if ((this._NumberOfAssignmentsHandledTogether != value))
				{
					this.OnNumberOfAssignmentsHandledTogetherChanging(value);
					this.SendPropertyChanging();
					this._NumberOfAssignmentsHandledTogether = value;
					this.SendPropertyChanged("NumberOfAssignmentsHandledTogether");
					this.OnNumberOfAssignmentsHandledTogetherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAssignmentsWithKPI", DbType="NVarChar(MAX)")]
		public string NumberOfAssignmentsWithKPI
		{
			get
			{
				return this._NumberOfAssignmentsWithKPI;
			}
			set
			{
				if ((this._NumberOfAssignmentsWithKPI != value))
				{
					this.OnNumberOfAssignmentsWithKPIChanging(value);
					this.SendPropertyChanging();
					this._NumberOfAssignmentsWithKPI = value;
					this.SendPropertyChanged("NumberOfAssignmentsWithKPI");
					this.OnNumberOfAssignmentsWithKPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AreaOfAchievement", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AreaOfAchievements.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AreaOfAchievements.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AreaOfAchievement", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AreaOfAchievements.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AreaOfAchievements.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaOfImprovement")]
	public partial class AreaOfImprovement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private System.Nullable<System.DateTime> _EvaluationDate;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private string _NumberOfErrors;
		
		private string _NumberOfDummages;
		
		private string _DelayesCaused;
		
		private string _Others;
		
		private string _REmark;
		
		private string _LastObjectiveAndAcionPlan;
		
		private string _ObjectiveAchivmentMeasure;
		
		private string _StrategiesUsed;
		
		private string _NewYearPlan;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnEvaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationDateChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnNumberOfErrorsChanging(string value);
    partial void OnNumberOfErrorsChanged();
    partial void OnNumberOfDummagesChanging(string value);
    partial void OnNumberOfDummagesChanged();
    partial void OnDelayesCausedChanging(string value);
    partial void OnDelayesCausedChanged();
    partial void OnOthersChanging(string value);
    partial void OnOthersChanged();
    partial void OnREmarkChanging(string value);
    partial void OnREmarkChanged();
    partial void OnLastObjectiveAndAcionPlanChanging(string value);
    partial void OnLastObjectiveAndAcionPlanChanged();
    partial void OnObjectiveAchivmentMeasureChanging(string value);
    partial void OnObjectiveAchivmentMeasureChanged();
    partial void OnStrategiesUsedChanging(string value);
    partial void OnStrategiesUsedChanged();
    partial void OnNewYearPlanChanging(string value);
    partial void OnNewYearPlanChanged();
    #endregion
		
		public AreaOfImprovement()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluationDate
		{
			get
			{
				return this._EvaluationDate;
			}
			set
			{
				if ((this._EvaluationDate != value))
				{
					this.OnEvaluationDateChanging(value);
					this.SendPropertyChanging();
					this._EvaluationDate = value;
					this.SendPropertyChanged("EvaluationDate");
					this.OnEvaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfErrors", DbType="NVarChar(MAX)")]
		public string NumberOfErrors
		{
			get
			{
				return this._NumberOfErrors;
			}
			set
			{
				if ((this._NumberOfErrors != value))
				{
					this.OnNumberOfErrorsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfErrors = value;
					this.SendPropertyChanged("NumberOfErrors");
					this.OnNumberOfErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDummages", DbType="NVarChar(MAX)")]
		public string NumberOfDummages
		{
			get
			{
				return this._NumberOfDummages;
			}
			set
			{
				if ((this._NumberOfDummages != value))
				{
					this.OnNumberOfDummagesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDummages = value;
					this.SendPropertyChanged("NumberOfDummages");
					this.OnNumberOfDummagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayesCaused", DbType="NVarChar(MAX)")]
		public string DelayesCaused
		{
			get
			{
				return this._DelayesCaused;
			}
			set
			{
				if ((this._DelayesCaused != value))
				{
					this.OnDelayesCausedChanging(value);
					this.SendPropertyChanging();
					this._DelayesCaused = value;
					this.SendPropertyChanged("DelayesCaused");
					this.OnDelayesCausedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Others", DbType="NVarChar(MAX)")]
		public string Others
		{
			get
			{
				return this._Others;
			}
			set
			{
				if ((this._Others != value))
				{
					this.OnOthersChanging(value);
					this.SendPropertyChanging();
					this._Others = value;
					this.SendPropertyChanged("Others");
					this.OnOthersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REmark", DbType="NVarChar(MAX)")]
		public string REmark
		{
			get
			{
				return this._REmark;
			}
			set
			{
				if ((this._REmark != value))
				{
					this.OnREmarkChanging(value);
					this.SendPropertyChanging();
					this._REmark = value;
					this.SendPropertyChanged("REmark");
					this.OnREmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastObjectiveAndAcionPlan", DbType="NVarChar(MAX)")]
		public string LastObjectiveAndAcionPlan
		{
			get
			{
				return this._LastObjectiveAndAcionPlan;
			}
			set
			{
				if ((this._LastObjectiveAndAcionPlan != value))
				{
					this.OnLastObjectiveAndAcionPlanChanging(value);
					this.SendPropertyChanging();
					this._LastObjectiveAndAcionPlan = value;
					this.SendPropertyChanged("LastObjectiveAndAcionPlan");
					this.OnLastObjectiveAndAcionPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectiveAchivmentMeasure", DbType="NVarChar(MAX)")]
		public string ObjectiveAchivmentMeasure
		{
			get
			{
				return this._ObjectiveAchivmentMeasure;
			}
			set
			{
				if ((this._ObjectiveAchivmentMeasure != value))
				{
					this.OnObjectiveAchivmentMeasureChanging(value);
					this.SendPropertyChanging();
					this._ObjectiveAchivmentMeasure = value;
					this.SendPropertyChanged("ObjectiveAchivmentMeasure");
					this.OnObjectiveAchivmentMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrategiesUsed", DbType="NVarChar(MAX)")]
		public string StrategiesUsed
		{
			get
			{
				return this._StrategiesUsed;
			}
			set
			{
				if ((this._StrategiesUsed != value))
				{
					this.OnStrategiesUsedChanging(value);
					this.SendPropertyChanging();
					this._StrategiesUsed = value;
					this.SendPropertyChanged("StrategiesUsed");
					this.OnStrategiesUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewYearPlan", DbType="NVarChar(MAX)")]
		public string NewYearPlan
		{
			get
			{
				return this._NewYearPlan;
			}
			set
			{
				if ((this._NewYearPlan != value))
				{
					this.OnNewYearPlanChanging(value);
					this.SendPropertyChanging();
					this._NewYearPlan = value;
					this.SendPropertyChanged("NewYearPlan");
					this.OnNewYearPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AreaOfImprovement", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AreaOfImprovements.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AreaOfImprovements.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AreaOfImprovement", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AreaOfImprovements.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AreaOfImprovements.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdministrativeRelatedIssuePerformance")]
	public partial class AdministrativeRelatedIssuePerformance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _EvaluatinDAte;
		
		private string _PerformanceMeasure;
		
		private string _NewYearPlan;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluatinDAteChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluatinDAteChanged();
    partial void OnPerformanceMeasureChanging(string value);
    partial void OnPerformanceMeasureChanged();
    partial void OnNewYearPlanChanging(string value);
    partial void OnNewYearPlanChanged();
    #endregion
		
		public AdministrativeRelatedIssuePerformance()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatinDAte", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluatinDAte
		{
			get
			{
				return this._EvaluatinDAte;
			}
			set
			{
				if ((this._EvaluatinDAte != value))
				{
					this.OnEvaluatinDAteChanging(value);
					this.SendPropertyChanging();
					this._EvaluatinDAte = value;
					this.SendPropertyChanged("EvaluatinDAte");
					this.OnEvaluatinDAteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformanceMeasure", DbType="NVarChar(MAX)")]
		public string PerformanceMeasure
		{
			get
			{
				return this._PerformanceMeasure;
			}
			set
			{
				if ((this._PerformanceMeasure != value))
				{
					this.OnPerformanceMeasureChanging(value);
					this.SendPropertyChanging();
					this._PerformanceMeasure = value;
					this.SendPropertyChanged("PerformanceMeasure");
					this.OnPerformanceMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewYearPlan", DbType="NVarChar(MAX)")]
		public string NewYearPlan
		{
			get
			{
				return this._NewYearPlan;
			}
			set
			{
				if ((this._NewYearPlan != value))
				{
					this.OnNewYearPlanChanging(value);
					this.SendPropertyChanging();
					this._NewYearPlan = value;
					this.SendPropertyChanged("NewYearPlan");
					this.OnNewYearPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AdministrativeRelatedIssuePerformance", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AdministrativeRelatedIssuePerformances.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AdministrativeRelatedIssuePerformances.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AdministrativeRelatedIssuePerformance", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AdministrativeRelatedIssuePerformances.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AdministrativeRelatedIssuePerformances.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarketingRelatedIssuePerformance")]
	public partial class MarketingRelatedIssuePerformance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _EvaluatinDAte;
		
		private string _PerformanceMeasure;
		
		private string _NewYearPlan;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluatinDAteChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluatinDAteChanged();
    partial void OnPerformanceMeasureChanging(string value);
    partial void OnPerformanceMeasureChanged();
    partial void OnNewYearPlanChanging(string value);
    partial void OnNewYearPlanChanged();
    #endregion
		
		public MarketingRelatedIssuePerformance()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatinDAte", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluatinDAte
		{
			get
			{
				return this._EvaluatinDAte;
			}
			set
			{
				if ((this._EvaluatinDAte != value))
				{
					this.OnEvaluatinDAteChanging(value);
					this.SendPropertyChanging();
					this._EvaluatinDAte = value;
					this.SendPropertyChanged("EvaluatinDAte");
					this.OnEvaluatinDAteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformanceMeasure", DbType="NVarChar(MAX)")]
		public string PerformanceMeasure
		{
			get
			{
				return this._PerformanceMeasure;
			}
			set
			{
				if ((this._PerformanceMeasure != value))
				{
					this.OnPerformanceMeasureChanging(value);
					this.SendPropertyChanging();
					this._PerformanceMeasure = value;
					this.SendPropertyChanged("PerformanceMeasure");
					this.OnPerformanceMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewYearPlan", DbType="NVarChar(MAX)")]
		public string NewYearPlan
		{
			get
			{
				return this._NewYearPlan;
			}
			set
			{
				if ((this._NewYearPlan != value))
				{
					this.OnNewYearPlanChanging(value);
					this.SendPropertyChanging();
					this._NewYearPlan = value;
					this.SendPropertyChanged("NewYearPlan");
					this.OnNewYearPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_MarketingRelatedIssuePerformance", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.MarketingRelatedIssuePerformances.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.MarketingRelatedIssuePerformances.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_MarketingRelatedIssuePerformance", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.MarketingRelatedIssuePerformances.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.MarketingRelatedIssuePerformances.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OverAllGeneralPerformance")]
	public partial class OverAllGeneralPerformance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _EvaluatinDAte;
		
		private string _PerformanceMeasure;
		
		private string _NewYearPlan;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluatinDAteChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluatinDAteChanged();
    partial void OnPerformanceMeasureChanging(string value);
    partial void OnPerformanceMeasureChanged();
    partial void OnNewYearPlanChanging(string value);
    partial void OnNewYearPlanChanged();
    #endregion
		
		public OverAllGeneralPerformance()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatinDAte", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluatinDAte
		{
			get
			{
				return this._EvaluatinDAte;
			}
			set
			{
				if ((this._EvaluatinDAte != value))
				{
					this.OnEvaluatinDAteChanging(value);
					this.SendPropertyChanging();
					this._EvaluatinDAte = value;
					this.SendPropertyChanged("EvaluatinDAte");
					this.OnEvaluatinDAteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformanceMeasure", DbType="NVarChar(MAX)")]
		public string PerformanceMeasure
		{
			get
			{
				return this._PerformanceMeasure;
			}
			set
			{
				if ((this._PerformanceMeasure != value))
				{
					this.OnPerformanceMeasureChanging(value);
					this.SendPropertyChanging();
					this._PerformanceMeasure = value;
					this.SendPropertyChanged("PerformanceMeasure");
					this.OnPerformanceMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewYearPlan", DbType="NVarChar(MAX)")]
		public string NewYearPlan
		{
			get
			{
				return this._NewYearPlan;
			}
			set
			{
				if ((this._NewYearPlan != value))
				{
					this.OnNewYearPlanChanging(value);
					this.SendPropertyChanging();
					this._NewYearPlan = value;
					this.SendPropertyChanged("NewYearPlan");
					this.OnNewYearPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_OverAllGeneralPerformance", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.OverAllGeneralPerformances.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.OverAllGeneralPerformances.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OverAllGeneralPerformance", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.OverAllGeneralPerformances.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.OverAllGeneralPerformances.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddionalPAGRelatedGeneral")]
	public partial class AddionalPAGRelatedGeneral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _EvaluatinDAte;
		
		private string _GoodPractices;
		
		private string _AreasToBeReviewed;
		
		private string _EmployeeStatement;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeIdChanging(System.Nullable<int> value);
    partial void OnEmployeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluatinDAteChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluatinDAteChanged();
    partial void OnGoodPracticesChanging(string value);
    partial void OnGoodPracticesChanged();
    partial void OnAreasToBeReviewedChanging(string value);
    partial void OnAreasToBeReviewedChanged();
    partial void OnEmployeeStatementChanging(string value);
    partial void OnEmployeeStatementChanged();
    #endregion
		
		public AddionalPAGRelatedGeneral()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeId", DbType="Int")]
		public System.Nullable<int> EmployeId
		{
			get
			{
				return this._EmployeId;
			}
			set
			{
				if ((this._EmployeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeId = value;
					this.SendPropertyChanged("EmployeId");
					this.OnEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatinDAte", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluatinDAte
		{
			get
			{
				return this._EvaluatinDAte;
			}
			set
			{
				if ((this._EvaluatinDAte != value))
				{
					this.OnEvaluatinDAteChanging(value);
					this.SendPropertyChanging();
					this._EvaluatinDAte = value;
					this.SendPropertyChanged("EvaluatinDAte");
					this.OnEvaluatinDAteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodPractices", DbType="NVarChar(MAX)")]
		public string GoodPractices
		{
			get
			{
				return this._GoodPractices;
			}
			set
			{
				if ((this._GoodPractices != value))
				{
					this.OnGoodPracticesChanging(value);
					this.SendPropertyChanging();
					this._GoodPractices = value;
					this.SendPropertyChanged("GoodPractices");
					this.OnGoodPracticesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreasToBeReviewed", DbType="NVarChar(MAX)")]
		public string AreasToBeReviewed
		{
			get
			{
				return this._AreasToBeReviewed;
			}
			set
			{
				if ((this._AreasToBeReviewed != value))
				{
					this.OnAreasToBeReviewedChanging(value);
					this.SendPropertyChanging();
					this._AreasToBeReviewed = value;
					this.SendPropertyChanged("AreasToBeReviewed");
					this.OnAreasToBeReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeStatement", DbType="NVarChar(MAX)")]
		public string EmployeeStatement
		{
			get
			{
				return this._EmployeeStatement;
			}
			set
			{
				if ((this._EmployeeStatement != value))
				{
					this.OnEmployeeStatementChanging(value);
					this.SendPropertyChanging();
					this._EmployeeStatement = value;
					this.SendPropertyChanged("EmployeeStatement");
					this.OnEmployeeStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AddionalPAGRelatedGeneral", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AddionalPAGRelatedGenerals.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AddionalPAGRelatedGenerals.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AddionalPAGRelatedGeneral", Storage="_Employee", ThisKey="EmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AddionalPAGRelatedGenerals.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AddionalPAGRelatedGenerals.Add(this);
						this._EmployeId = value.Id;
					}
					else
					{
						this._EmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnualEmployeeEvaluationNotes")]
	public partial class AnnualEmployeeEvaluationNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _LineManagerId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _evaluationDate;
		
		private string _DirectJobRElated;
		
		private string _AdministrativeRalated;
		
		private string _ClientHandlingRElated;
		
		private string _General;
		
		private System.Nullable<bool> _isSubmited;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnLineManagerIdChanging(System.Nullable<int> value);
    partial void OnLineManagerIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnevaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnevaluationDateChanged();
    partial void OnDirectJobRElatedChanging(string value);
    partial void OnDirectJobRElatedChanged();
    partial void OnAdministrativeRalatedChanging(string value);
    partial void OnAdministrativeRalatedChanged();
    partial void OnClientHandlingRElatedChanging(string value);
    partial void OnClientHandlingRElatedChanged();
    partial void OnGeneralChanging(string value);
    partial void OnGeneralChanged();
    partial void OnisSubmitedChanging(System.Nullable<bool> value);
    partial void OnisSubmitedChanged();
    #endregion
		
		public AnnualEmployeeEvaluationNote()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineManagerId", DbType="Int")]
		public System.Nullable<int> LineManagerId
		{
			get
			{
				return this._LineManagerId;
			}
			set
			{
				if ((this._LineManagerId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineManagerIdChanging(value);
					this.SendPropertyChanging();
					this._LineManagerId = value;
					this.SendPropertyChanged("LineManagerId");
					this.OnLineManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> evaluationDate
		{
			get
			{
				return this._evaluationDate;
			}
			set
			{
				if ((this._evaluationDate != value))
				{
					this.OnevaluationDateChanging(value);
					this.SendPropertyChanging();
					this._evaluationDate = value;
					this.SendPropertyChanged("evaluationDate");
					this.OnevaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectJobRElated", DbType="NVarChar(MAX)")]
		public string DirectJobRElated
		{
			get
			{
				return this._DirectJobRElated;
			}
			set
			{
				if ((this._DirectJobRElated != value))
				{
					this.OnDirectJobRElatedChanging(value);
					this.SendPropertyChanging();
					this._DirectJobRElated = value;
					this.SendPropertyChanged("DirectJobRElated");
					this.OnDirectJobRElatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrativeRalated", DbType="NVarChar(MAX)")]
		public string AdministrativeRalated
		{
			get
			{
				return this._AdministrativeRalated;
			}
			set
			{
				if ((this._AdministrativeRalated != value))
				{
					this.OnAdministrativeRalatedChanging(value);
					this.SendPropertyChanging();
					this._AdministrativeRalated = value;
					this.SendPropertyChanged("AdministrativeRalated");
					this.OnAdministrativeRalatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientHandlingRElated", DbType="NVarChar(MAX)")]
		public string ClientHandlingRElated
		{
			get
			{
				return this._ClientHandlingRElated;
			}
			set
			{
				if ((this._ClientHandlingRElated != value))
				{
					this.OnClientHandlingRElatedChanging(value);
					this.SendPropertyChanging();
					this._ClientHandlingRElated = value;
					this.SendPropertyChanged("ClientHandlingRElated");
					this.OnClientHandlingRElatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_General", DbType="NVarChar(MAX)")]
		public string General
		{
			get
			{
				return this._General;
			}
			set
			{
				if ((this._General != value))
				{
					this.OnGeneralChanging(value);
					this.SendPropertyChanging();
					this._General = value;
					this.SendPropertyChanged("General");
					this.OnGeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSubmited", DbType="Bit")]
		public System.Nullable<bool> isSubmited
		{
			get
			{
				return this._isSubmited;
			}
			set
			{
				if ((this._isSubmited != value))
				{
					this.OnisSubmitedChanging(value);
					this.SendPropertyChanging();
					this._isSubmited = value;
					this.SendPropertyChanged("isSubmited");
					this.OnisSubmitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualEmployeeEvaluationNote", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AnnualEmployeeEvaluationNotes.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AnnualEmployeeEvaluationNotes.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationNote", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AnnualEmployeeEvaluationNotes.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AnnualEmployeeEvaluationNotes.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationNote1", Storage="_Employee1", ThisKey="LineManagerId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.AnnualEmployeeEvaluationNotes1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.AnnualEmployeeEvaluationNotes1.Add(this);
						this._LineManagerId = value.Id;
					}
					else
					{
						this._LineManagerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnualEmployeeEvaluationYesNo")]
	public partial class AnnualEmployeeEvaluationYesNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _LineManagerId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _evaluationDate;
		
		private string _FullySuccessfull;
		
		private string _OutStandingPerformance;
		
		private string _Unsatisfactory;
		
		private string _ShouldBePromoted;
		
		private System.Nullable<bool> _isSubmited;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnLineManagerIdChanging(System.Nullable<int> value);
    partial void OnLineManagerIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnevaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnevaluationDateChanged();
    partial void OnFullySuccessfullChanging(string value);
    partial void OnFullySuccessfullChanged();
    partial void OnOutStandingPerformanceChanging(string value);
    partial void OnOutStandingPerformanceChanged();
    partial void OnUnsatisfactoryChanging(string value);
    partial void OnUnsatisfactoryChanged();
    partial void OnShouldBePromotedChanging(string value);
    partial void OnShouldBePromotedChanged();
    partial void OnisSubmitedChanging(System.Nullable<bool> value);
    partial void OnisSubmitedChanged();
    #endregion
		
		public AnnualEmployeeEvaluationYesNo()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineManagerId", DbType="Int")]
		public System.Nullable<int> LineManagerId
		{
			get
			{
				return this._LineManagerId;
			}
			set
			{
				if ((this._LineManagerId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineManagerIdChanging(value);
					this.SendPropertyChanging();
					this._LineManagerId = value;
					this.SendPropertyChanged("LineManagerId");
					this.OnLineManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> evaluationDate
		{
			get
			{
				return this._evaluationDate;
			}
			set
			{
				if ((this._evaluationDate != value))
				{
					this.OnevaluationDateChanging(value);
					this.SendPropertyChanging();
					this._evaluationDate = value;
					this.SendPropertyChanged("evaluationDate");
					this.OnevaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullySuccessfull", DbType="NVarChar(50)")]
		public string FullySuccessfull
		{
			get
			{
				return this._FullySuccessfull;
			}
			set
			{
				if ((this._FullySuccessfull != value))
				{
					this.OnFullySuccessfullChanging(value);
					this.SendPropertyChanging();
					this._FullySuccessfull = value;
					this.SendPropertyChanged("FullySuccessfull");
					this.OnFullySuccessfullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutStandingPerformance", DbType="NVarChar(50)")]
		public string OutStandingPerformance
		{
			get
			{
				return this._OutStandingPerformance;
			}
			set
			{
				if ((this._OutStandingPerformance != value))
				{
					this.OnOutStandingPerformanceChanging(value);
					this.SendPropertyChanging();
					this._OutStandingPerformance = value;
					this.SendPropertyChanged("OutStandingPerformance");
					this.OnOutStandingPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unsatisfactory", DbType="NVarChar(50)")]
		public string Unsatisfactory
		{
			get
			{
				return this._Unsatisfactory;
			}
			set
			{
				if ((this._Unsatisfactory != value))
				{
					this.OnUnsatisfactoryChanging(value);
					this.SendPropertyChanging();
					this._Unsatisfactory = value;
					this.SendPropertyChanged("Unsatisfactory");
					this.OnUnsatisfactoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShouldBePromoted", DbType="NVarChar(50)")]
		public string ShouldBePromoted
		{
			get
			{
				return this._ShouldBePromoted;
			}
			set
			{
				if ((this._ShouldBePromoted != value))
				{
					this.OnShouldBePromotedChanging(value);
					this.SendPropertyChanging();
					this._ShouldBePromoted = value;
					this.SendPropertyChanged("ShouldBePromoted");
					this.OnShouldBePromotedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSubmited", DbType="Bit")]
		public System.Nullable<bool> isSubmited
		{
			get
			{
				return this._isSubmited;
			}
			set
			{
				if ((this._isSubmited != value))
				{
					this.OnisSubmitedChanging(value);
					this.SendPropertyChanging();
					this._isSubmited = value;
					this.SendPropertyChanged("isSubmited");
					this.OnisSubmitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_AnnualEmployeeEvaluationYesNo", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.AnnualEmployeeEvaluationYesNos.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.AnnualEmployeeEvaluationYesNos.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationYesNo", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AnnualEmployeeEvaluationYesNos.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AnnualEmployeeEvaluationYesNos.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationYesNo1", Storage="_Employee1", ThisKey="LineManagerId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.AnnualEmployeeEvaluationYesNos1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.AnnualEmployeeEvaluationYesNos1.Add(this);
						this._LineManagerId = value.Id;
					}
					else
					{
						this._LineManagerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_LineMAnagersEmployes")]
	public partial class View_LineMAnagersEmploye
	{
		
		private System.Nullable<int> _employeeID;
		
		private System.Nullable<int> _LineManager;
		
		private string _EmpFullName;
		
		private string _ENameAM;
		
		private string _ELNameAM;
		
		private System.Nullable<int> _period;
		
		public View_LineMAnagersEmploye()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int")]
		public System.Nullable<int> employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this._employeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineManager", DbType="Int")]
		public System.Nullable<int> LineManager
		{
			get
			{
				return this._LineManager;
			}
			set
			{
				if ((this._LineManager != value))
				{
					this._LineManager = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpFullName", DbType="NVarChar(501)")]
		public string EmpFullName
		{
			get
			{
				return this._EmpFullName;
			}
			set
			{
				if ((this._EmpFullName != value))
				{
					this._EmpFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENameAM", DbType="NVarChar(250)")]
		public string ENameAM
		{
			get
			{
				return this._ENameAM;
			}
			set
			{
				if ((this._ENameAM != value))
				{
					this._ENameAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELNameAM", DbType="NVarChar(250)")]
		public string ELNameAM
		{
			get
			{
				return this._ELNameAM;
			}
			set
			{
				if ((this._ELNameAM != value))
				{
					this._ELNameAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_period", DbType="Int")]
		public System.Nullable<int> period
		{
			get
			{
				return this._period;
			}
			set
			{
				if ((this._period != value))
				{
					this._period = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LKEmployeesToLineMGREvaluation")]
	public partial class LKEmployeesToLineMGREvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EvaluationName;
		
		private string _EvaluationNameAmharic;
		
		private System.Nullable<int> _MaxRate;
		
		private System.Nullable<int> _MinRate;
		
		private string _Status;
		
		private System.Nullable<int> _DataTypes;
		
		private EntitySet<EmployeesToLineMGREvaluation> _EmployeesToLineMGREvaluations;
		
		private EntityRef<LKDatatype> _LKDatatype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationNameChanging(string value);
    partial void OnEvaluationNameChanged();
    partial void OnEvaluationNameAmharicChanging(string value);
    partial void OnEvaluationNameAmharicChanged();
    partial void OnMaxRateChanging(System.Nullable<int> value);
    partial void OnMaxRateChanged();
    partial void OnMinRateChanging(System.Nullable<int> value);
    partial void OnMinRateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDataTypesChanging(System.Nullable<int> value);
    partial void OnDataTypesChanged();
    #endregion
		
		public LKEmployeesToLineMGREvaluation()
		{
			this._EmployeesToLineMGREvaluations = new EntitySet<EmployeesToLineMGREvaluation>(new Action<EmployeesToLineMGREvaluation>(this.attach_EmployeesToLineMGREvaluations), new Action<EmployeesToLineMGREvaluation>(this.detach_EmployeesToLineMGREvaluations));
			this._LKDatatype = default(EntityRef<LKDatatype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationName", DbType="NVarChar(MAX)")]
		public string EvaluationName
		{
			get
			{
				return this._EvaluationName;
			}
			set
			{
				if ((this._EvaluationName != value))
				{
					this.OnEvaluationNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationName = value;
					this.SendPropertyChanged("EvaluationName");
					this.OnEvaluationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationNameAmharic", DbType="NVarChar(MAX)")]
		public string EvaluationNameAmharic
		{
			get
			{
				return this._EvaluationNameAmharic;
			}
			set
			{
				if ((this._EvaluationNameAmharic != value))
				{
					this.OnEvaluationNameAmharicChanging(value);
					this.SendPropertyChanging();
					this._EvaluationNameAmharic = value;
					this.SendPropertyChanged("EvaluationNameAmharic");
					this.OnEvaluationNameAmharicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRate", DbType="Int")]
		public System.Nullable<int> MaxRate
		{
			get
			{
				return this._MaxRate;
			}
			set
			{
				if ((this._MaxRate != value))
				{
					this.OnMaxRateChanging(value);
					this.SendPropertyChanging();
					this._MaxRate = value;
					this.SendPropertyChanged("MaxRate");
					this.OnMaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Int")]
		public System.Nullable<int> MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(250)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypes", DbType="Int")]
		public System.Nullable<int> DataTypes
		{
			get
			{
				return this._DataTypes;
			}
			set
			{
				if ((this._DataTypes != value))
				{
					if (this._LKDatatype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataTypesChanging(value);
					this.SendPropertyChanging();
					this._DataTypes = value;
					this.SendPropertyChanged("DataTypes");
					this.OnDataTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKEmployeesToLineMGREvaluation_EmployeesToLineMGREvaluation", Storage="_EmployeesToLineMGREvaluations", ThisKey="Id", OtherKey="EvaluationPointName")]
		public EntitySet<EmployeesToLineMGREvaluation> EmployeesToLineMGREvaluations
		{
			get
			{
				return this._EmployeesToLineMGREvaluations;
			}
			set
			{
				this._EmployeesToLineMGREvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKDatatype_LKEmployeesToLineMGREvaluation", Storage="_LKDatatype", ThisKey="DataTypes", OtherKey="Id", IsForeignKey=true)]
		public LKDatatype LKDatatype
		{
			get
			{
				return this._LKDatatype.Entity;
			}
			set
			{
				LKDatatype previousValue = this._LKDatatype.Entity;
				if (((previousValue != value) 
							|| (this._LKDatatype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKDatatype.Entity = null;
						previousValue.LKEmployeesToLineMGREvaluations.Remove(this);
					}
					this._LKDatatype.Entity = value;
					if ((value != null))
					{
						value.LKEmployeesToLineMGREvaluations.Add(this);
						this._DataTypes = value.Id;
					}
					else
					{
						this._DataTypes = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKDatatype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeesToLineMGREvaluations(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKEmployeesToLineMGREvaluation = this;
		}
		
		private void detach_EmployeesToLineMGREvaluations(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.LKEmployeesToLineMGREvaluation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeesToLineMGREvaluation")]
	public partial class EmployeesToLineMGREvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _LineManagerId;
		
		private System.Nullable<int> _EvaluationPointName;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private string _EvaluationPointGiven;
		
		private System.Nullable<System.DateTime> _EvaluationDate;
		
		private System.Nullable<bool> _isSubmitted;
		
		private EntityRef<LKEmployeesToLineMGREvaluation> _LKEmployeesToLineMGREvaluation;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnLineManagerIdChanging(System.Nullable<int> value);
    partial void OnLineManagerIdChanged();
    partial void OnEvaluationPointNameChanging(System.Nullable<int> value);
    partial void OnEvaluationPointNameChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluationPointGivenChanging(string value);
    partial void OnEvaluationPointGivenChanged();
    partial void OnEvaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationDateChanged();
    partial void OnisSubmittedChanging(System.Nullable<bool> value);
    partial void OnisSubmittedChanged();
    #endregion
		
		public EmployeesToLineMGREvaluation()
		{
			this._LKEmployeesToLineMGREvaluation = default(EntityRef<LKEmployeesToLineMGREvaluation>);
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineManagerId", DbType="Int")]
		public System.Nullable<int> LineManagerId
		{
			get
			{
				return this._LineManagerId;
			}
			set
			{
				if ((this._LineManagerId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineManagerIdChanging(value);
					this.SendPropertyChanging();
					this._LineManagerId = value;
					this.SendPropertyChanged("LineManagerId");
					this.OnLineManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointName", DbType="Int")]
		public System.Nullable<int> EvaluationPointName
		{
			get
			{
				return this._EvaluationPointName;
			}
			set
			{
				if ((this._EvaluationPointName != value))
				{
					if (this._LKEmployeesToLineMGREvaluation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPointNameChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointName = value;
					this.SendPropertyChanged("EvaluationPointName");
					this.OnEvaluationPointNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPointGiven", DbType="NVarChar(MAX)")]
		public string EvaluationPointGiven
		{
			get
			{
				return this._EvaluationPointGiven;
			}
			set
			{
				if ((this._EvaluationPointGiven != value))
				{
					this.OnEvaluationPointGivenChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPointGiven = value;
					this.SendPropertyChanged("EvaluationPointGiven");
					this.OnEvaluationPointGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluationDate
		{
			get
			{
				return this._EvaluationDate;
			}
			set
			{
				if ((this._EvaluationDate != value))
				{
					this.OnEvaluationDateChanging(value);
					this.SendPropertyChanging();
					this._EvaluationDate = value;
					this.SendPropertyChanged("EvaluationDate");
					this.OnEvaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSubmitted", DbType="Bit")]
		public System.Nullable<bool> isSubmitted
		{
			get
			{
				return this._isSubmitted;
			}
			set
			{
				if ((this._isSubmitted != value))
				{
					this.OnisSubmittedChanging(value);
					this.SendPropertyChanging();
					this._isSubmitted = value;
					this.SendPropertyChanged("isSubmitted");
					this.OnisSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LKEmployeesToLineMGREvaluation_EmployeesToLineMGREvaluation", Storage="_LKEmployeesToLineMGREvaluation", ThisKey="EvaluationPointName", OtherKey="Id", IsForeignKey=true)]
		public LKEmployeesToLineMGREvaluation LKEmployeesToLineMGREvaluation
		{
			get
			{
				return this._LKEmployeesToLineMGREvaluation.Entity;
			}
			set
			{
				LKEmployeesToLineMGREvaluation previousValue = this._LKEmployeesToLineMGREvaluation.Entity;
				if (((previousValue != value) 
							|| (this._LKEmployeesToLineMGREvaluation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LKEmployeesToLineMGREvaluation.Entity = null;
						previousValue.EmployeesToLineMGREvaluations.Remove(this);
					}
					this._LKEmployeesToLineMGREvaluation.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluations.Add(this);
						this._EvaluationPointName = value.Id;
					}
					else
					{
						this._EvaluationPointName = default(Nullable<int>);
					}
					this.SendPropertyChanged("LKEmployeesToLineMGREvaluation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EmployeesToLineMGREvaluation", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.EmployeesToLineMGREvaluations.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluations.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluation", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeesToLineMGREvaluations.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluations.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluation1", Storage="_Employee1", ThisKey="LineManagerId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.EmployeesToLineMGREvaluations1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluations1.Add(this);
						this._LineManagerId = value.Id;
					}
					else
					{
						this._LineManagerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeesToLineMGREvaluationForm")]
	public partial class EmployeesToLineMGREvaluationForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _LineManagerId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _EvaluationDate;
		
		private string _DirectJobRElated;
		
		private string _AdministrativeRElative;
		
		private string _StaffDevelopement;
		
		private string _Generaln;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnLineManagerIdChanging(System.Nullable<int> value);
    partial void OnLineManagerIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationDateChanged();
    partial void OnDirectJobRElatedChanging(string value);
    partial void OnDirectJobRElatedChanged();
    partial void OnAdministrativeRElativeChanging(string value);
    partial void OnAdministrativeRElativeChanged();
    partial void OnStaffDevelopementChanging(string value);
    partial void OnStaffDevelopementChanged();
    partial void OnGeneralnChanging(string value);
    partial void OnGeneralnChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    #endregion
		
		public EmployeesToLineMGREvaluationForm()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineManagerId", DbType="Int")]
		public System.Nullable<int> LineManagerId
		{
			get
			{
				return this._LineManagerId;
			}
			set
			{
				if ((this._LineManagerId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineManagerIdChanging(value);
					this.SendPropertyChanging();
					this._LineManagerId = value;
					this.SendPropertyChanged("LineManagerId");
					this.OnLineManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluationDate
		{
			get
			{
				return this._EvaluationDate;
			}
			set
			{
				if ((this._EvaluationDate != value))
				{
					this.OnEvaluationDateChanging(value);
					this.SendPropertyChanging();
					this._EvaluationDate = value;
					this.SendPropertyChanged("EvaluationDate");
					this.OnEvaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectJobRElated", DbType="NVarChar(MAX)")]
		public string DirectJobRElated
		{
			get
			{
				return this._DirectJobRElated;
			}
			set
			{
				if ((this._DirectJobRElated != value))
				{
					this.OnDirectJobRElatedChanging(value);
					this.SendPropertyChanging();
					this._DirectJobRElated = value;
					this.SendPropertyChanged("DirectJobRElated");
					this.OnDirectJobRElatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrativeRElative", DbType="NVarChar(MAX)")]
		public string AdministrativeRElative
		{
			get
			{
				return this._AdministrativeRElative;
			}
			set
			{
				if ((this._AdministrativeRElative != value))
				{
					this.OnAdministrativeRElativeChanging(value);
					this.SendPropertyChanging();
					this._AdministrativeRElative = value;
					this.SendPropertyChanged("AdministrativeRElative");
					this.OnAdministrativeRElativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffDevelopement", DbType="NVarChar(MAX)")]
		public string StaffDevelopement
		{
			get
			{
				return this._StaffDevelopement;
			}
			set
			{
				if ((this._StaffDevelopement != value))
				{
					this.OnStaffDevelopementChanging(value);
					this.SendPropertyChanging();
					this._StaffDevelopement = value;
					this.SendPropertyChanged("StaffDevelopement");
					this.OnStaffDevelopementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Generaln", DbType="VarChar(MAX)")]
		public string Generaln
		{
			get
			{
				return this._Generaln;
			}
			set
			{
				if ((this._Generaln != value))
				{
					this.OnGeneralnChanging(value);
					this.SendPropertyChanging();
					this._Generaln = value;
					this.SendPropertyChanged("Generaln");
					this.OnGeneralnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EmployeesToLineMGREvaluationForm", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.EmployeesToLineMGREvaluationForms.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluationForms.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluationForm", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeesToLineMGREvaluationForms.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluationForms.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluationForm1", Storage="_Employee1", ThisKey="LineManagerId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.EmployeesToLineMGREvaluationForms1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.EmployeesToLineMGREvaluationForms1.Add(this);
						this._LineManagerId = value.Id;
					}
					else
					{
						this._LineManagerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CEOCommentOnAnnualEvaluation")]
	public partial class CEOCommentOnAnnualEvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _CEoId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<System.DateTime> _EvaluationDate;
		
		private string _IsupportTheEvaluation;
		
		private string _ReasonForTheGibenComment;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnCEoIdChanging(System.Nullable<int> value);
    partial void OnCEoIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnEvaluationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationDateChanged();
    partial void OnIsupportTheEvaluationChanging(string value);
    partial void OnIsupportTheEvaluationChanged();
    partial void OnReasonForTheGibenCommentChanging(string value);
    partial void OnReasonForTheGibenCommentChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    #endregion
		
		public CEOCommentOnAnnualEvaluation()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEoId", DbType="Int")]
		public System.Nullable<int> CEoId
		{
			get
			{
				return this._CEoId;
			}
			set
			{
				if ((this._CEoId != value))
				{
					this.OnCEoIdChanging(value);
					this.SendPropertyChanging();
					this._CEoId = value;
					this.SendPropertyChanged("CEoId");
					this.OnCEoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EvaluationDate
		{
			get
			{
				return this._EvaluationDate;
			}
			set
			{
				if ((this._EvaluationDate != value))
				{
					this.OnEvaluationDateChanging(value);
					this.SendPropertyChanging();
					this._EvaluationDate = value;
					this.SendPropertyChanged("EvaluationDate");
					this.OnEvaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsupportTheEvaluation", DbType="NVarChar(50)")]
		public string IsupportTheEvaluation
		{
			get
			{
				return this._IsupportTheEvaluation;
			}
			set
			{
				if ((this._IsupportTheEvaluation != value))
				{
					this.OnIsupportTheEvaluationChanging(value);
					this.SendPropertyChanging();
					this._IsupportTheEvaluation = value;
					this.SendPropertyChanged("IsupportTheEvaluation");
					this.OnIsupportTheEvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonForTheGibenComment", DbType="NVarChar(MAX)")]
		public string ReasonForTheGibenComment
		{
			get
			{
				return this._ReasonForTheGibenComment;
			}
			set
			{
				if ((this._ReasonForTheGibenComment != value))
				{
					this.OnReasonForTheGibenCommentChanging(value);
					this.SendPropertyChanging();
					this._ReasonForTheGibenComment = value;
					this.SendPropertyChanged("ReasonForTheGibenComment");
					this.OnReasonForTheGibenCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_CEOCommentOnAnnualEvaluation", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.CEOCommentOnAnnualEvaluations.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.CEOCommentOnAnnualEvaluations.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubmitedAnnualForms")]
	public partial class SubmitedAnnualForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<bool> _IsSubmitted;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _SubmittedDate;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnIsSubmittedChanging(System.Nullable<bool> value);
    partial void OnIsSubmittedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSubmittedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmittedDateChanged();
    #endregion
		
		public SubmitedAnnualForm()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if (this._EvaluationPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit")]
		public System.Nullable<bool> IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(250)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedDate", DbType="Date")]
		public System.Nullable<System.DateTime> SubmittedDate
		{
			get
			{
				return this._SubmittedDate;
			}
			set
			{
				if ((this._SubmittedDate != value))
				{
					this.OnSubmittedDateChanging(value);
					this.SendPropertyChanging();
					this._SubmittedDate = value;
					this.SendPropertyChanged("SubmittedDate");
					this.OnSubmittedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_SubmitedAnnualForm", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.SubmitedAnnualForms.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.SubmitedAnnualForms.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SubmitedAnnualForm", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.SubmitedAnnualForms.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.SubmitedAnnualForms.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationDisclosure")]
	public partial class EvaluationDisclosure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EvalutorId;
		
		private System.Nullable<int> _EvaluatedEmployeId;
		
		private System.Nullable<int> _EvaluationPeriod;
		
		private System.Nullable<bool> _IDontMind;
		
		private System.Nullable<bool> _AdminOpinionOnDisclosore;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod1;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod2;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Employee> _Employee2;
		
		private EntityRef<Employee> _Employee3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvalutorIdChanging(System.Nullable<int> value);
    partial void OnEvalutorIdChanged();
    partial void OnEvaluatedEmployeIdChanging(System.Nullable<int> value);
    partial void OnEvaluatedEmployeIdChanged();
    partial void OnEvaluationPeriodChanging(System.Nullable<int> value);
    partial void OnEvaluationPeriodChanged();
    partial void OnIDontMindChanging(System.Nullable<bool> value);
    partial void OnIDontMindChanged();
    partial void OnAdminOpinionOnDisclosoreChanging(System.Nullable<bool> value);
    partial void OnAdminOpinionOnDisclosoreChanged();
    #endregion
		
		public EvaluationDisclosure()
		{
			this._EvaluationPeriod1 = default(EntityRef<EvaluationPeriod>);
			this._EvaluationPeriod2 = default(EntityRef<EvaluationPeriod>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Employee2 = default(EntityRef<Employee>);
			this._Employee3 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvalutorId", DbType="Int")]
		public System.Nullable<int> EvalutorId
		{
			get
			{
				return this._EvalutorId;
			}
			set
			{
				if ((this._EvalutorId != value))
				{
					if ((this._Employee.HasLoadedOrAssignedValue || this._Employee2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvalutorIdChanging(value);
					this.SendPropertyChanging();
					this._EvalutorId = value;
					this.SendPropertyChanged("EvalutorId");
					this.OnEvalutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatedEmployeId", DbType="Int")]
		public System.Nullable<int> EvaluatedEmployeId
		{
			get
			{
				return this._EvaluatedEmployeId;
			}
			set
			{
				if ((this._EvaluatedEmployeId != value))
				{
					if ((this._Employee1.HasLoadedOrAssignedValue || this._Employee3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatedEmployeIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatedEmployeId = value;
					this.SendPropertyChanged("EvaluatedEmployeId");
					this.OnEvaluatedEmployeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationPeriod", DbType="Int")]
		public System.Nullable<int> EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod;
			}
			set
			{
				if ((this._EvaluationPeriod != value))
				{
					if ((this._EvaluationPeriod1.HasLoadedOrAssignedValue || this._EvaluationPeriod2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationPeriodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPeriod = value;
					this.SendPropertyChanged("EvaluationPeriod");
					this.OnEvaluationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDontMind", DbType="Bit")]
		public System.Nullable<bool> IDontMind
		{
			get
			{
				return this._IDontMind;
			}
			set
			{
				if ((this._IDontMind != value))
				{
					this.OnIDontMindChanging(value);
					this.SendPropertyChanging();
					this._IDontMind = value;
					this.SendPropertyChanged("IDontMind");
					this.OnIDontMindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminOpinionOnDisclosore", DbType="Bit")]
		public System.Nullable<bool> AdminOpinionOnDisclosore
		{
			get
			{
				return this._AdminOpinionOnDisclosore;
			}
			set
			{
				if ((this._AdminOpinionOnDisclosore != value))
				{
					this.OnAdminOpinionOnDisclosoreChanging(value);
					this.SendPropertyChanging();
					this._AdminOpinionOnDisclosore = value;
					this.SendPropertyChanged("AdminOpinionOnDisclosore");
					this.OnAdminOpinionOnDisclosoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EvaluationDisclosure", Storage="_EvaluationPeriod1", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod1
		{
			get
			{
				return this._EvaluationPeriod1.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod1.Entity = null;
						previousValue.EvaluationDisclosures.Remove(this);
					}
					this._EvaluationPeriod1.Entity = value;
					if ((value != null))
					{
						value.EvaluationDisclosures.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_EvaluationDisclosure1", Storage="_EvaluationPeriod2", ThisKey="EvaluationPeriod", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod2
		{
			get
			{
				return this._EvaluationPeriod2.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod2.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod2.Entity = null;
						previousValue.EvaluationDisclosures1.Remove(this);
					}
					this._EvaluationPeriod2.Entity = value;
					if ((value != null))
					{
						value.EvaluationDisclosures1.Add(this);
						this._EvaluationPeriod = value.Id;
					}
					else
					{
						this._EvaluationPeriod = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure", Storage="_Employee", ThisKey="EvalutorId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EvaluationDisclosures.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EvaluationDisclosures.Add(this);
						this._EvalutorId = value.Id;
					}
					else
					{
						this._EvalutorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure1", Storage="_Employee1", ThisKey="EvaluatedEmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.EvaluationDisclosures1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.EvaluationDisclosures1.Add(this);
						this._EvaluatedEmployeId = value.Id;
					}
					else
					{
						this._EvaluatedEmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure2", Storage="_Employee2", ThisKey="EvalutorId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.EvaluationDisclosures2.Remove(this);
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.EvaluationDisclosures2.Add(this);
						this._EvalutorId = value.Id;
					}
					else
					{
						this._EvalutorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure3", Storage="_Employee3", ThisKey="EvaluatedEmployeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee3
		{
			get
			{
				return this._Employee3.Entity;
			}
			set
			{
				Employee previousValue = this._Employee3.Entity;
				if (((previousValue != value) 
							|| (this._Employee3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee3.Entity = null;
						previousValue.EvaluationDisclosures3.Remove(this);
					}
					this._Employee3.Entity = value;
					if ((value != null))
					{
						value.EvaluationDisclosures3.Add(this);
						this._EvaluatedEmployeId = value.Id;
					}
					else
					{
						this._EvaluatedEmployeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EName;
		
		private string _ELName;
		
		private string _ENameAM;
		
		private string _ELNameAM;
		
		private string _JobPosition;
		
		private string _JobPositionAM;
		
		private string _isActive;
		
		private string _CompanyId;
		
		private string _Emails;
		
		private EntitySet<Employee_LineManager> _Employee_LineManagers;
		
		private EntitySet<Employee_LineManager> _Employee_LineManagers1;
		
		private EntitySet<Employee_LineManager> _Employee_LineManagers2;
		
		private EntitySet<Employee_LineManager> _Employee_LineManagers3;
		
		private EntitySet<LKSixMonthPlan> _LKSixMonthPlans;
		
		private EntitySet<LKSixMonthPlan> _LKSixMonthPlans1;
		
		private EntitySet<EvaluatedPoint> _EvaluatedPoints;
		
		private EntitySet<EvaluatedPoint> _EvaluatedPoints1;
		
		private EntitySet<EvaluatedPoint> _EvaluatedPoints2;
		
		private EntitySet<EvaluatedPoint> _EvaluatedPoints3;
		
		private EntitySet<SixMonthPlan> _SixMonthPlans;
		
		private EntitySet<SixMonthPlan> _SixMonthPlans1;
		
		private EntitySet<SixMonthPlan> _SixMonthPlans2;
		
		private EntitySet<SixMonthPlan> _SixMonthPlans3;
		
		private EntitySet<WorkPlanforNextYear> _WorkPlanforNextYears;
		
		private EntitySet<AnnualColleagueEvaluation> _AnnualColleagueEvaluations;
		
		private EntitySet<AnnualColleagueEvaluation> _AnnualColleagueEvaluations1;
		
		private EntitySet<AnnualLineManagerEvaluation> _AnnualLineManagerEvaluations;
		
		private EntitySet<AnnualLineManagerEvaluation> _AnnualLineManagerEvaluations1;
		
		private EntitySet<AreaOfAchievement> _AreaOfAchievements;
		
		private EntitySet<AreaOfImprovement> _AreaOfImprovements;
		
		private EntitySet<AdministrativeRelatedIssuePerformance> _AdministrativeRelatedIssuePerformances;
		
		private EntitySet<MarketingRelatedIssuePerformance> _MarketingRelatedIssuePerformances;
		
		private EntitySet<OverAllGeneralPerformance> _OverAllGeneralPerformances;
		
		private EntitySet<AddionalPAGRelatedGeneral> _AddionalPAGRelatedGenerals;
		
		private EntitySet<AnnualEmployeeEvaluationNote> _AnnualEmployeeEvaluationNotes;
		
		private EntitySet<AnnualEmployeeEvaluationNote> _AnnualEmployeeEvaluationNotes1;
		
		private EntitySet<AnnualEmployeeEvaluationYesNo> _AnnualEmployeeEvaluationYesNos;
		
		private EntitySet<AnnualEmployeeEvaluationYesNo> _AnnualEmployeeEvaluationYesNos1;
		
		private EntitySet<EmployeesToLineMGREvaluation> _EmployeesToLineMGREvaluations;
		
		private EntitySet<EmployeesToLineMGREvaluation> _EmployeesToLineMGREvaluations1;
		
		private EntitySet<EmployeesToLineMGREvaluationForm> _EmployeesToLineMGREvaluationForms;
		
		private EntitySet<EmployeesToLineMGREvaluationForm> _EmployeesToLineMGREvaluationForms1;
		
		private EntitySet<SubmitedAnnualForm> _SubmitedAnnualForms;
		
		private EntitySet<EvaluationDisclosure> _EvaluationDisclosures;
		
		private EntitySet<EvaluationDisclosure> _EvaluationDisclosures1;
		
		private EntitySet<EvaluationDisclosure> _EvaluationDisclosures2;
		
		private EntitySet<EvaluationDisclosure> _EvaluationDisclosures3;
		
		private EntitySet<Employee_evaluatorColleague> _Employee_evaluatorColleagues;
		
		private EntitySet<Employee_evaluatorColleague> _Employee_evaluatorColleagues1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    partial void OnELNameChanging(string value);
    partial void OnELNameChanged();
    partial void OnENameAMChanging(string value);
    partial void OnENameAMChanged();
    partial void OnELNameAMChanging(string value);
    partial void OnELNameAMChanged();
    partial void OnJobPositionChanging(string value);
    partial void OnJobPositionChanged();
    partial void OnJobPositionAMChanging(string value);
    partial void OnJobPositionAMChanged();
    partial void OnisActiveChanging(string value);
    partial void OnisActiveChanged();
    partial void OnCompanyIdChanging(string value);
    partial void OnCompanyIdChanged();
    partial void OnEmailsChanging(string value);
    partial void OnEmailsChanged();
    #endregion
		
		public Employee()
		{
			this._Employee_LineManagers = new EntitySet<Employee_LineManager>(new Action<Employee_LineManager>(this.attach_Employee_LineManagers), new Action<Employee_LineManager>(this.detach_Employee_LineManagers));
			this._Employee_LineManagers1 = new EntitySet<Employee_LineManager>(new Action<Employee_LineManager>(this.attach_Employee_LineManagers1), new Action<Employee_LineManager>(this.detach_Employee_LineManagers1));
			this._Employee_LineManagers2 = new EntitySet<Employee_LineManager>(new Action<Employee_LineManager>(this.attach_Employee_LineManagers2), new Action<Employee_LineManager>(this.detach_Employee_LineManagers2));
			this._Employee_LineManagers3 = new EntitySet<Employee_LineManager>(new Action<Employee_LineManager>(this.attach_Employee_LineManagers3), new Action<Employee_LineManager>(this.detach_Employee_LineManagers3));
			this._LKSixMonthPlans = new EntitySet<LKSixMonthPlan>(new Action<LKSixMonthPlan>(this.attach_LKSixMonthPlans), new Action<LKSixMonthPlan>(this.detach_LKSixMonthPlans));
			this._LKSixMonthPlans1 = new EntitySet<LKSixMonthPlan>(new Action<LKSixMonthPlan>(this.attach_LKSixMonthPlans1), new Action<LKSixMonthPlan>(this.detach_LKSixMonthPlans1));
			this._EvaluatedPoints = new EntitySet<EvaluatedPoint>(new Action<EvaluatedPoint>(this.attach_EvaluatedPoints), new Action<EvaluatedPoint>(this.detach_EvaluatedPoints));
			this._EvaluatedPoints1 = new EntitySet<EvaluatedPoint>(new Action<EvaluatedPoint>(this.attach_EvaluatedPoints1), new Action<EvaluatedPoint>(this.detach_EvaluatedPoints1));
			this._EvaluatedPoints2 = new EntitySet<EvaluatedPoint>(new Action<EvaluatedPoint>(this.attach_EvaluatedPoints2), new Action<EvaluatedPoint>(this.detach_EvaluatedPoints2));
			this._EvaluatedPoints3 = new EntitySet<EvaluatedPoint>(new Action<EvaluatedPoint>(this.attach_EvaluatedPoints3), new Action<EvaluatedPoint>(this.detach_EvaluatedPoints3));
			this._SixMonthPlans = new EntitySet<SixMonthPlan>(new Action<SixMonthPlan>(this.attach_SixMonthPlans), new Action<SixMonthPlan>(this.detach_SixMonthPlans));
			this._SixMonthPlans1 = new EntitySet<SixMonthPlan>(new Action<SixMonthPlan>(this.attach_SixMonthPlans1), new Action<SixMonthPlan>(this.detach_SixMonthPlans1));
			this._SixMonthPlans2 = new EntitySet<SixMonthPlan>(new Action<SixMonthPlan>(this.attach_SixMonthPlans2), new Action<SixMonthPlan>(this.detach_SixMonthPlans2));
			this._SixMonthPlans3 = new EntitySet<SixMonthPlan>(new Action<SixMonthPlan>(this.attach_SixMonthPlans3), new Action<SixMonthPlan>(this.detach_SixMonthPlans3));
			this._WorkPlanforNextYears = new EntitySet<WorkPlanforNextYear>(new Action<WorkPlanforNextYear>(this.attach_WorkPlanforNextYears), new Action<WorkPlanforNextYear>(this.detach_WorkPlanforNextYears));
			this._AnnualColleagueEvaluations = new EntitySet<AnnualColleagueEvaluation>(new Action<AnnualColleagueEvaluation>(this.attach_AnnualColleagueEvaluations), new Action<AnnualColleagueEvaluation>(this.detach_AnnualColleagueEvaluations));
			this._AnnualColleagueEvaluations1 = new EntitySet<AnnualColleagueEvaluation>(new Action<AnnualColleagueEvaluation>(this.attach_AnnualColleagueEvaluations1), new Action<AnnualColleagueEvaluation>(this.detach_AnnualColleagueEvaluations1));
			this._AnnualLineManagerEvaluations = new EntitySet<AnnualLineManagerEvaluation>(new Action<AnnualLineManagerEvaluation>(this.attach_AnnualLineManagerEvaluations), new Action<AnnualLineManagerEvaluation>(this.detach_AnnualLineManagerEvaluations));
			this._AnnualLineManagerEvaluations1 = new EntitySet<AnnualLineManagerEvaluation>(new Action<AnnualLineManagerEvaluation>(this.attach_AnnualLineManagerEvaluations1), new Action<AnnualLineManagerEvaluation>(this.detach_AnnualLineManagerEvaluations1));
			this._AreaOfAchievements = new EntitySet<AreaOfAchievement>(new Action<AreaOfAchievement>(this.attach_AreaOfAchievements), new Action<AreaOfAchievement>(this.detach_AreaOfAchievements));
			this._AreaOfImprovements = new EntitySet<AreaOfImprovement>(new Action<AreaOfImprovement>(this.attach_AreaOfImprovements), new Action<AreaOfImprovement>(this.detach_AreaOfImprovements));
			this._AdministrativeRelatedIssuePerformances = new EntitySet<AdministrativeRelatedIssuePerformance>(new Action<AdministrativeRelatedIssuePerformance>(this.attach_AdministrativeRelatedIssuePerformances), new Action<AdministrativeRelatedIssuePerformance>(this.detach_AdministrativeRelatedIssuePerformances));
			this._MarketingRelatedIssuePerformances = new EntitySet<MarketingRelatedIssuePerformance>(new Action<MarketingRelatedIssuePerformance>(this.attach_MarketingRelatedIssuePerformances), new Action<MarketingRelatedIssuePerformance>(this.detach_MarketingRelatedIssuePerformances));
			this._OverAllGeneralPerformances = new EntitySet<OverAllGeneralPerformance>(new Action<OverAllGeneralPerformance>(this.attach_OverAllGeneralPerformances), new Action<OverAllGeneralPerformance>(this.detach_OverAllGeneralPerformances));
			this._AddionalPAGRelatedGenerals = new EntitySet<AddionalPAGRelatedGeneral>(new Action<AddionalPAGRelatedGeneral>(this.attach_AddionalPAGRelatedGenerals), new Action<AddionalPAGRelatedGeneral>(this.detach_AddionalPAGRelatedGenerals));
			this._AnnualEmployeeEvaluationNotes = new EntitySet<AnnualEmployeeEvaluationNote>(new Action<AnnualEmployeeEvaluationNote>(this.attach_AnnualEmployeeEvaluationNotes), new Action<AnnualEmployeeEvaluationNote>(this.detach_AnnualEmployeeEvaluationNotes));
			this._AnnualEmployeeEvaluationNotes1 = new EntitySet<AnnualEmployeeEvaluationNote>(new Action<AnnualEmployeeEvaluationNote>(this.attach_AnnualEmployeeEvaluationNotes1), new Action<AnnualEmployeeEvaluationNote>(this.detach_AnnualEmployeeEvaluationNotes1));
			this._AnnualEmployeeEvaluationYesNos = new EntitySet<AnnualEmployeeEvaluationYesNo>(new Action<AnnualEmployeeEvaluationYesNo>(this.attach_AnnualEmployeeEvaluationYesNos), new Action<AnnualEmployeeEvaluationYesNo>(this.detach_AnnualEmployeeEvaluationYesNos));
			this._AnnualEmployeeEvaluationYesNos1 = new EntitySet<AnnualEmployeeEvaluationYesNo>(new Action<AnnualEmployeeEvaluationYesNo>(this.attach_AnnualEmployeeEvaluationYesNos1), new Action<AnnualEmployeeEvaluationYesNo>(this.detach_AnnualEmployeeEvaluationYesNos1));
			this._EmployeesToLineMGREvaluations = new EntitySet<EmployeesToLineMGREvaluation>(new Action<EmployeesToLineMGREvaluation>(this.attach_EmployeesToLineMGREvaluations), new Action<EmployeesToLineMGREvaluation>(this.detach_EmployeesToLineMGREvaluations));
			this._EmployeesToLineMGREvaluations1 = new EntitySet<EmployeesToLineMGREvaluation>(new Action<EmployeesToLineMGREvaluation>(this.attach_EmployeesToLineMGREvaluations1), new Action<EmployeesToLineMGREvaluation>(this.detach_EmployeesToLineMGREvaluations1));
			this._EmployeesToLineMGREvaluationForms = new EntitySet<EmployeesToLineMGREvaluationForm>(new Action<EmployeesToLineMGREvaluationForm>(this.attach_EmployeesToLineMGREvaluationForms), new Action<EmployeesToLineMGREvaluationForm>(this.detach_EmployeesToLineMGREvaluationForms));
			this._EmployeesToLineMGREvaluationForms1 = new EntitySet<EmployeesToLineMGREvaluationForm>(new Action<EmployeesToLineMGREvaluationForm>(this.attach_EmployeesToLineMGREvaluationForms1), new Action<EmployeesToLineMGREvaluationForm>(this.detach_EmployeesToLineMGREvaluationForms1));
			this._SubmitedAnnualForms = new EntitySet<SubmitedAnnualForm>(new Action<SubmitedAnnualForm>(this.attach_SubmitedAnnualForms), new Action<SubmitedAnnualForm>(this.detach_SubmitedAnnualForms));
			this._EvaluationDisclosures = new EntitySet<EvaluationDisclosure>(new Action<EvaluationDisclosure>(this.attach_EvaluationDisclosures), new Action<EvaluationDisclosure>(this.detach_EvaluationDisclosures));
			this._EvaluationDisclosures1 = new EntitySet<EvaluationDisclosure>(new Action<EvaluationDisclosure>(this.attach_EvaluationDisclosures1), new Action<EvaluationDisclosure>(this.detach_EvaluationDisclosures1));
			this._EvaluationDisclosures2 = new EntitySet<EvaluationDisclosure>(new Action<EvaluationDisclosure>(this.attach_EvaluationDisclosures2), new Action<EvaluationDisclosure>(this.detach_EvaluationDisclosures2));
			this._EvaluationDisclosures3 = new EntitySet<EvaluationDisclosure>(new Action<EvaluationDisclosure>(this.attach_EvaluationDisclosures3), new Action<EvaluationDisclosure>(this.detach_EvaluationDisclosures3));
			this._Employee_evaluatorColleagues = new EntitySet<Employee_evaluatorColleague>(new Action<Employee_evaluatorColleague>(this.attach_Employee_evaluatorColleagues), new Action<Employee_evaluatorColleague>(this.detach_Employee_evaluatorColleagues));
			this._Employee_evaluatorColleagues1 = new EntitySet<Employee_evaluatorColleague>(new Action<Employee_evaluatorColleague>(this.attach_Employee_evaluatorColleagues1), new Action<Employee_evaluatorColleague>(this.detach_Employee_evaluatorColleagues1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(250)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this.OnENameChanging(value);
					this.SendPropertyChanging();
					this._EName = value;
					this.SendPropertyChanged("EName");
					this.OnENameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELName", DbType="NVarChar(250)")]
		public string ELName
		{
			get
			{
				return this._ELName;
			}
			set
			{
				if ((this._ELName != value))
				{
					this.OnELNameChanging(value);
					this.SendPropertyChanging();
					this._ELName = value;
					this.SendPropertyChanged("ELName");
					this.OnELNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENameAM", DbType="NVarChar(250)")]
		public string ENameAM
		{
			get
			{
				return this._ENameAM;
			}
			set
			{
				if ((this._ENameAM != value))
				{
					this.OnENameAMChanging(value);
					this.SendPropertyChanging();
					this._ENameAM = value;
					this.SendPropertyChanged("ENameAM");
					this.OnENameAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELNameAM", DbType="NVarChar(250)")]
		public string ELNameAM
		{
			get
			{
				return this._ELNameAM;
			}
			set
			{
				if ((this._ELNameAM != value))
				{
					this.OnELNameAMChanging(value);
					this.SendPropertyChanging();
					this._ELNameAM = value;
					this.SendPropertyChanged("ELNameAM");
					this.OnELNameAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPosition", DbType="NVarChar(250)")]
		public string JobPosition
		{
			get
			{
				return this._JobPosition;
			}
			set
			{
				if ((this._JobPosition != value))
				{
					this.OnJobPositionChanging(value);
					this.SendPropertyChanging();
					this._JobPosition = value;
					this.SendPropertyChanged("JobPosition");
					this.OnJobPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPositionAM", DbType="NVarChar(250)")]
		public string JobPositionAM
		{
			get
			{
				return this._JobPositionAM;
			}
			set
			{
				if ((this._JobPositionAM != value))
				{
					this.OnJobPositionAMChanging(value);
					this.SendPropertyChanging();
					this._JobPositionAM = value;
					this.SendPropertyChanged("JobPositionAM");
					this.OnJobPositionAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="NVarChar(10)")]
		public string isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(MAX)")]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emails", DbType="NVarChar(MAX)")]
		public string Emails
		{
			get
			{
				return this._Emails;
			}
			set
			{
				if ((this._Emails != value))
				{
					this.OnEmailsChanging(value);
					this.SendPropertyChanging();
					this._Emails = value;
					this.SendPropertyChanged("Emails");
					this.OnEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager", Storage="_Employee_LineManagers", ThisKey="Id", OtherKey="employeeID")]
		public EntitySet<Employee_LineManager> Employee_LineManagers
		{
			get
			{
				return this._Employee_LineManagers;
			}
			set
			{
				this._Employee_LineManagers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager1", Storage="_Employee_LineManagers1", ThisKey="Id", OtherKey="employeeID")]
		public EntitySet<Employee_LineManager> Employee_LineManagers1
		{
			get
			{
				return this._Employee_LineManagers1;
			}
			set
			{
				this._Employee_LineManagers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager2", Storage="_Employee_LineManagers2", ThisKey="Id", OtherKey="LineManager")]
		public EntitySet<Employee_LineManager> Employee_LineManagers2
		{
			get
			{
				return this._Employee_LineManagers2;
			}
			set
			{
				this._Employee_LineManagers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_LineManager3", Storage="_Employee_LineManagers3", ThisKey="Id", OtherKey="LineManager")]
		public EntitySet<Employee_LineManager> Employee_LineManagers3
		{
			get
			{
				return this._Employee_LineManagers3;
			}
			set
			{
				this._Employee_LineManagers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LKSixMonthPlan", Storage="_LKSixMonthPlans", ThisKey="Id", OtherKey="PreparedByID")]
		public EntitySet<LKSixMonthPlan> LKSixMonthPlans
		{
			get
			{
				return this._LKSixMonthPlans;
			}
			set
			{
				this._LKSixMonthPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LKSixMonthPlan1", Storage="_LKSixMonthPlans1", ThisKey="Id", OtherKey="PreparedByID")]
		public EntitySet<LKSixMonthPlan> LKSixMonthPlans1
		{
			get
			{
				return this._LKSixMonthPlans1;
			}
			set
			{
				this._LKSixMonthPlans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint", Storage="_EvaluatedPoints", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EvaluatedPoint> EvaluatedPoints
		{
			get
			{
				return this._EvaluatedPoints;
			}
			set
			{
				this._EvaluatedPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint1", Storage="_EvaluatedPoints1", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EvaluatedPoint> EvaluatedPoints1
		{
			get
			{
				return this._EvaluatedPoints1;
			}
			set
			{
				this._EvaluatedPoints1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint2", Storage="_EvaluatedPoints2", ThisKey="Id", OtherKey="EvaluatorId")]
		public EntitySet<EvaluatedPoint> EvaluatedPoints2
		{
			get
			{
				return this._EvaluatedPoints2;
			}
			set
			{
				this._EvaluatedPoints2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluatedPoint3", Storage="_EvaluatedPoints3", ThisKey="Id", OtherKey="EvaluatorId")]
		public EntitySet<EvaluatedPoint> EvaluatedPoints3
		{
			get
			{
				return this._EvaluatedPoints3;
			}
			set
			{
				this._EvaluatedPoints3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan", Storage="_SixMonthPlans", ThisKey="Id", OtherKey="PlanSetByEmployeeId")]
		public EntitySet<SixMonthPlan> SixMonthPlans
		{
			get
			{
				return this._SixMonthPlans;
			}
			set
			{
				this._SixMonthPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan1", Storage="_SixMonthPlans1", ThisKey="Id", OtherKey="PlanSetForEmployeeId")]
		public EntitySet<SixMonthPlan> SixMonthPlans1
		{
			get
			{
				return this._SixMonthPlans1;
			}
			set
			{
				this._SixMonthPlans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan2", Storage="_SixMonthPlans2", ThisKey="Id", OtherKey="PlanSetByEmployeeId")]
		public EntitySet<SixMonthPlan> SixMonthPlans2
		{
			get
			{
				return this._SixMonthPlans2;
			}
			set
			{
				this._SixMonthPlans2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SixMonthPlan3", Storage="_SixMonthPlans3", ThisKey="Id", OtherKey="PlanSetForEmployeeId")]
		public EntitySet<SixMonthPlan> SixMonthPlans3
		{
			get
			{
				return this._SixMonthPlans3;
			}
			set
			{
				this._SixMonthPlans3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_WorkPlanforNextYear", Storage="_WorkPlanforNextYears", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<WorkPlanforNextYear> WorkPlanforNextYears
		{
			get
			{
				return this._WorkPlanforNextYears;
			}
			set
			{
				this._WorkPlanforNextYears.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualColleagueEvaluation", Storage="_AnnualColleagueEvaluations", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<AnnualColleagueEvaluation> AnnualColleagueEvaluations
		{
			get
			{
				return this._AnnualColleagueEvaluations;
			}
			set
			{
				this._AnnualColleagueEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualColleagueEvaluation1", Storage="_AnnualColleagueEvaluations1", ThisKey="Id", OtherKey="EvaluatorColleagueId")]
		public EntitySet<AnnualColleagueEvaluation> AnnualColleagueEvaluations1
		{
			get
			{
				return this._AnnualColleagueEvaluations1;
			}
			set
			{
				this._AnnualColleagueEvaluations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualLineManagerEvaluation", Storage="_AnnualLineManagerEvaluations", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<AnnualLineManagerEvaluation> AnnualLineManagerEvaluations
		{
			get
			{
				return this._AnnualLineManagerEvaluations;
			}
			set
			{
				this._AnnualLineManagerEvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualLineManagerEvaluation1", Storage="_AnnualLineManagerEvaluations1", ThisKey="Id", OtherKey="EvaluatorLineMgrId")]
		public EntitySet<AnnualLineManagerEvaluation> AnnualLineManagerEvaluations1
		{
			get
			{
				return this._AnnualLineManagerEvaluations1;
			}
			set
			{
				this._AnnualLineManagerEvaluations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AreaOfAchievement", Storage="_AreaOfAchievements", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<AreaOfAchievement> AreaOfAchievements
		{
			get
			{
				return this._AreaOfAchievements;
			}
			set
			{
				this._AreaOfAchievements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AreaOfImprovement", Storage="_AreaOfImprovements", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<AreaOfImprovement> AreaOfImprovements
		{
			get
			{
				return this._AreaOfImprovements;
			}
			set
			{
				this._AreaOfImprovements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AdministrativeRelatedIssuePerformance", Storage="_AdministrativeRelatedIssuePerformances", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<AdministrativeRelatedIssuePerformance> AdministrativeRelatedIssuePerformances
		{
			get
			{
				return this._AdministrativeRelatedIssuePerformances;
			}
			set
			{
				this._AdministrativeRelatedIssuePerformances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_MarketingRelatedIssuePerformance", Storage="_MarketingRelatedIssuePerformances", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<MarketingRelatedIssuePerformance> MarketingRelatedIssuePerformances
		{
			get
			{
				return this._MarketingRelatedIssuePerformances;
			}
			set
			{
				this._MarketingRelatedIssuePerformances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OverAllGeneralPerformance", Storage="_OverAllGeneralPerformances", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<OverAllGeneralPerformance> OverAllGeneralPerformances
		{
			get
			{
				return this._OverAllGeneralPerformances;
			}
			set
			{
				this._OverAllGeneralPerformances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AddionalPAGRelatedGeneral", Storage="_AddionalPAGRelatedGenerals", ThisKey="Id", OtherKey="EmployeId")]
		public EntitySet<AddionalPAGRelatedGeneral> AddionalPAGRelatedGenerals
		{
			get
			{
				return this._AddionalPAGRelatedGenerals;
			}
			set
			{
				this._AddionalPAGRelatedGenerals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationNote", Storage="_AnnualEmployeeEvaluationNotes", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<AnnualEmployeeEvaluationNote> AnnualEmployeeEvaluationNotes
		{
			get
			{
				return this._AnnualEmployeeEvaluationNotes;
			}
			set
			{
				this._AnnualEmployeeEvaluationNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationNote1", Storage="_AnnualEmployeeEvaluationNotes1", ThisKey="Id", OtherKey="LineManagerId")]
		public EntitySet<AnnualEmployeeEvaluationNote> AnnualEmployeeEvaluationNotes1
		{
			get
			{
				return this._AnnualEmployeeEvaluationNotes1;
			}
			set
			{
				this._AnnualEmployeeEvaluationNotes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationYesNo", Storage="_AnnualEmployeeEvaluationYesNos", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<AnnualEmployeeEvaluationYesNo> AnnualEmployeeEvaluationYesNos
		{
			get
			{
				return this._AnnualEmployeeEvaluationYesNos;
			}
			set
			{
				this._AnnualEmployeeEvaluationYesNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AnnualEmployeeEvaluationYesNo1", Storage="_AnnualEmployeeEvaluationYesNos1", ThisKey="Id", OtherKey="LineManagerId")]
		public EntitySet<AnnualEmployeeEvaluationYesNo> AnnualEmployeeEvaluationYesNos1
		{
			get
			{
				return this._AnnualEmployeeEvaluationYesNos1;
			}
			set
			{
				this._AnnualEmployeeEvaluationYesNos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluation", Storage="_EmployeesToLineMGREvaluations", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EmployeesToLineMGREvaluation> EmployeesToLineMGREvaluations
		{
			get
			{
				return this._EmployeesToLineMGREvaluations;
			}
			set
			{
				this._EmployeesToLineMGREvaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluation1", Storage="_EmployeesToLineMGREvaluations1", ThisKey="Id", OtherKey="LineManagerId")]
		public EntitySet<EmployeesToLineMGREvaluation> EmployeesToLineMGREvaluations1
		{
			get
			{
				return this._EmployeesToLineMGREvaluations1;
			}
			set
			{
				this._EmployeesToLineMGREvaluations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluationForm", Storage="_EmployeesToLineMGREvaluationForms", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EmployeesToLineMGREvaluationForm> EmployeesToLineMGREvaluationForms
		{
			get
			{
				return this._EmployeesToLineMGREvaluationForms;
			}
			set
			{
				this._EmployeesToLineMGREvaluationForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesToLineMGREvaluationForm1", Storage="_EmployeesToLineMGREvaluationForms1", ThisKey="Id", OtherKey="LineManagerId")]
		public EntitySet<EmployeesToLineMGREvaluationForm> EmployeesToLineMGREvaluationForms1
		{
			get
			{
				return this._EmployeesToLineMGREvaluationForms1;
			}
			set
			{
				this._EmployeesToLineMGREvaluationForms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SubmitedAnnualForm", Storage="_SubmitedAnnualForms", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<SubmitedAnnualForm> SubmitedAnnualForms
		{
			get
			{
				return this._SubmitedAnnualForms;
			}
			set
			{
				this._SubmitedAnnualForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure", Storage="_EvaluationDisclosures", ThisKey="Id", OtherKey="EvalutorId")]
		public EntitySet<EvaluationDisclosure> EvaluationDisclosures
		{
			get
			{
				return this._EvaluationDisclosures;
			}
			set
			{
				this._EvaluationDisclosures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure1", Storage="_EvaluationDisclosures1", ThisKey="Id", OtherKey="EvaluatedEmployeId")]
		public EntitySet<EvaluationDisclosure> EvaluationDisclosures1
		{
			get
			{
				return this._EvaluationDisclosures1;
			}
			set
			{
				this._EvaluationDisclosures1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure2", Storage="_EvaluationDisclosures2", ThisKey="Id", OtherKey="EvalutorId")]
		public EntitySet<EvaluationDisclosure> EvaluationDisclosures2
		{
			get
			{
				return this._EvaluationDisclosures2;
			}
			set
			{
				this._EvaluationDisclosures2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EvaluationDisclosure3", Storage="_EvaluationDisclosures3", ThisKey="Id", OtherKey="EvaluatedEmployeId")]
		public EntitySet<EvaluationDisclosure> EvaluationDisclosures3
		{
			get
			{
				return this._EvaluationDisclosures3;
			}
			set
			{
				this._EvaluationDisclosures3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_evaluatorColleague", Storage="_Employee_evaluatorColleagues", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<Employee_evaluatorColleague> Employee_evaluatorColleagues
		{
			get
			{
				return this._Employee_evaluatorColleagues;
			}
			set
			{
				this._Employee_evaluatorColleagues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_evaluatorColleague1", Storage="_Employee_evaluatorColleagues1", ThisKey="Id", OtherKey="EvaluatorColleague")]
		public EntitySet<Employee_evaluatorColleague> Employee_evaluatorColleagues1
		{
			get
			{
				return this._Employee_evaluatorColleagues1;
			}
			set
			{
				this._Employee_evaluatorColleagues1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee_LineManagers(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Employee_LineManagers(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Employee_LineManagers1(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Employee_LineManagers1(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_Employee_LineManagers2(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = this;
		}
		
		private void detach_Employee_LineManagers2(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = null;
		}
		
		private void attach_Employee_LineManagers3(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = this;
		}
		
		private void detach_Employee_LineManagers3(Employee_LineManager entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = null;
		}
		
		private void attach_LKSixMonthPlans(LKSixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_LKSixMonthPlans(LKSixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_LKSixMonthPlans1(LKSixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_LKSixMonthPlans1(LKSixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_EvaluatedPoints(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EvaluatedPoints(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EvaluatedPoints1(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_EvaluatedPoints1(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_EvaluatedPoints2(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = this;
		}
		
		private void detach_EvaluatedPoints2(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = null;
		}
		
		private void attach_EvaluatedPoints3(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = this;
		}
		
		private void detach_EvaluatedPoints3(EvaluatedPoint entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = null;
		}
		
		private void attach_SixMonthPlans(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_SixMonthPlans(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_SixMonthPlans1(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_SixMonthPlans1(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_SixMonthPlans2(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = this;
		}
		
		private void detach_SixMonthPlans2(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = null;
		}
		
		private void attach_SixMonthPlans3(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = this;
		}
		
		private void detach_SixMonthPlans3(SixMonthPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = null;
		}
		
		private void attach_WorkPlanforNextYears(WorkPlanforNextYear entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_WorkPlanforNextYears(WorkPlanforNextYear entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AnnualColleagueEvaluations(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AnnualColleagueEvaluations(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AnnualColleagueEvaluations1(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_AnnualColleagueEvaluations1(AnnualColleagueEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_AnnualLineManagerEvaluations(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AnnualLineManagerEvaluations(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AnnualLineManagerEvaluations1(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_AnnualLineManagerEvaluations1(AnnualLineManagerEvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_AreaOfAchievements(AreaOfAchievement entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AreaOfAchievements(AreaOfAchievement entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AreaOfImprovements(AreaOfImprovement entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AreaOfImprovements(AreaOfImprovement entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AdministrativeRelatedIssuePerformances(AdministrativeRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AdministrativeRelatedIssuePerformances(AdministrativeRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_MarketingRelatedIssuePerformances(MarketingRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_MarketingRelatedIssuePerformances(MarketingRelatedIssuePerformance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_OverAllGeneralPerformances(OverAllGeneralPerformance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_OverAllGeneralPerformances(OverAllGeneralPerformance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AddionalPAGRelatedGenerals(AddionalPAGRelatedGeneral entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AddionalPAGRelatedGenerals(AddionalPAGRelatedGeneral entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AnnualEmployeeEvaluationNotes(AnnualEmployeeEvaluationNote entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AnnualEmployeeEvaluationNotes(AnnualEmployeeEvaluationNote entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AnnualEmployeeEvaluationNotes1(AnnualEmployeeEvaluationNote entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_AnnualEmployeeEvaluationNotes1(AnnualEmployeeEvaluationNote entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_AnnualEmployeeEvaluationYesNos(AnnualEmployeeEvaluationYesNo entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AnnualEmployeeEvaluationYesNos(AnnualEmployeeEvaluationYesNo entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AnnualEmployeeEvaluationYesNos1(AnnualEmployeeEvaluationYesNo entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_AnnualEmployeeEvaluationYesNos1(AnnualEmployeeEvaluationYesNo entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_EmployeesToLineMGREvaluations(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeesToLineMGREvaluations(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeesToLineMGREvaluations1(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_EmployeesToLineMGREvaluations1(EmployeesToLineMGREvaluation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_EmployeesToLineMGREvaluationForms(EmployeesToLineMGREvaluationForm entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeesToLineMGREvaluationForms(EmployeesToLineMGREvaluationForm entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeesToLineMGREvaluationForms1(EmployeesToLineMGREvaluationForm entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_EmployeesToLineMGREvaluationForms1(EmployeesToLineMGREvaluationForm entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_SubmitedAnnualForms(SubmitedAnnualForm entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_SubmitedAnnualForms(SubmitedAnnualForm entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EvaluationDisclosures(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EvaluationDisclosures(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EvaluationDisclosures1(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_EvaluationDisclosures1(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_EvaluationDisclosures2(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = this;
		}
		
		private void detach_EvaluationDisclosures2(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = null;
		}
		
		private void attach_EvaluationDisclosures3(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = this;
		}
		
		private void detach_EvaluationDisclosures3(EvaluationDisclosure entity)
		{
			this.SendPropertyChanging();
			entity.Employee3 = null;
		}
		
		private void attach_Employee_evaluatorColleagues(Employee_evaluatorColleague entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Employee_evaluatorColleagues(Employee_evaluatorColleague entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Employee_evaluatorColleagues1(Employee_evaluatorColleague entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Employee_evaluatorColleagues1(Employee_evaluatorColleague entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_evaluatorColleague")]
	public partial class Employee_evaluatorColleague : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _EvaluatorColleague;
		
		private System.Nullable<int> _period;
		
		private string _statuss;
		
		private System.Nullable<System.DateTime> _LastReminderSent;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<EvaluationPeriod> _EvaluationPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEvaluatorColleagueChanging(System.Nullable<int> value);
    partial void OnEvaluatorColleagueChanged();
    partial void OnperiodChanging(System.Nullable<int> value);
    partial void OnperiodChanged();
    partial void OnstatussChanging(string value);
    partial void OnstatussChanged();
    partial void OnLastReminderSentChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReminderSentChanged();
    #endregion
		
		public Employee_evaluatorColleague()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._EvaluationPeriod = default(EntityRef<EvaluationPeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorColleague", DbType="Int")]
		public System.Nullable<int> EvaluatorColleague
		{
			get
			{
				return this._EvaluatorColleague;
			}
			set
			{
				if ((this._EvaluatorColleague != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorColleagueChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorColleague = value;
					this.SendPropertyChanged("EvaluatorColleague");
					this.OnEvaluatorColleagueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_period", DbType="Int")]
		public System.Nullable<int> period
		{
			get
			{
				return this._period;
			}
			set
			{
				if ((this._period != value))
				{
					if (this._EvaluationPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnperiodChanging(value);
					this.SendPropertyChanging();
					this._period = value;
					this.SendPropertyChanged("period");
					this.OnperiodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statuss", DbType="NVarChar(MAX)")]
		public string statuss
		{
			get
			{
				return this._statuss;
			}
			set
			{
				if ((this._statuss != value))
				{
					this.OnstatussChanging(value);
					this.SendPropertyChanging();
					this._statuss = value;
					this.SendPropertyChanged("statuss");
					this.OnstatussChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReminderSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReminderSent
		{
			get
			{
				return this._LastReminderSent;
			}
			set
			{
				if ((this._LastReminderSent != value))
				{
					this.OnLastReminderSentChanging(value);
					this.SendPropertyChanging();
					this._LastReminderSent = value;
					this.SendPropertyChanged("LastReminderSent");
					this.OnLastReminderSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_evaluatorColleague", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Employee_evaluatorColleagues.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Employee_evaluatorColleagues.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_evaluatorColleague1", Storage="_Employee1", ThisKey="EvaluatorColleague", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employee_evaluatorColleagues1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employee_evaluatorColleagues1.Add(this);
						this._EvaluatorColleague = value.Id;
					}
					else
					{
						this._EvaluatorColleague = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationPeriod_Employee_evaluatorColleague", Storage="_EvaluationPeriod", ThisKey="period", OtherKey="Id", IsForeignKey=true)]
		public EvaluationPeriod EvaluationPeriod
		{
			get
			{
				return this._EvaluationPeriod.Entity;
			}
			set
			{
				EvaluationPeriod previousValue = this._EvaluationPeriod.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationPeriod.Entity = null;
						previousValue.Employee_evaluatorColleagues.Remove(this);
					}
					this._EvaluationPeriod.Entity = value;
					if ((value != null))
					{
						value.Employee_evaluatorColleagues.Add(this);
						this._period = value.Id;
					}
					else
					{
						this._period = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationPeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
